[{"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js":"1","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js":"2","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js":"3","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js":"4","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js":"5","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js":"6","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js":"7","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js":"8","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js":"9","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js":"10","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js":"11","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js":"12","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js":"13","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js":"14","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js":"15","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js":"16","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js":"17","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js":"18"},{"size":704,"mtime":1610914748060,"results":"19","hashOfConfig":"20"},{"size":1332,"mtime":1611246465423,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1610914748060,"results":"22","hashOfConfig":"20"},{"size":1777,"mtime":1611228348280,"results":"23","hashOfConfig":"20"},{"size":1965,"mtime":1611185199368,"results":"24","hashOfConfig":"20"},{"size":6656,"mtime":1611228528183,"results":"25","hashOfConfig":"20"},{"size":513,"mtime":1611089517161,"results":"26","hashOfConfig":"20"},{"size":2423,"mtime":1611185212986,"results":"27","hashOfConfig":"20"},{"size":5128,"mtime":1611235792562,"results":"28","hashOfConfig":"20"},{"size":321,"mtime":1611089517160,"results":"29","hashOfConfig":"20"},{"size":3830,"mtime":1611089517159,"results":"30","hashOfConfig":"20"},{"size":680,"mtime":1611248641413,"results":"31","hashOfConfig":"20"},{"size":187,"mtime":1610997377099,"results":"32","hashOfConfig":"20"},{"size":4147,"mtime":1610997556639,"results":"33","hashOfConfig":"20"},{"size":20827,"mtime":1611185199366,"results":"34","hashOfConfig":"20"},{"size":1027,"mtime":1611089517162,"results":"35","hashOfConfig":"20"},{"size":5481,"mtime":1611285674236,"results":"36","hashOfConfig":"20"},{"size":792,"mtime":1611089517161,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"9vty2w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js",[],["84","85"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js",["86","87"],"import React from \"react\";\r\n// import NavBar from './components/navBar/NavBar';\r\n\r\nimport MyGlobe from \"./components/home/WorldMap\";\r\nimport { Home } from \"./components/home/Home\";\r\nimport AddSuggestion from \"./components/suggestions/AddSuggestion\";\r\nimport SuggestionsList from \"./components/suggestions/SuggestionsList\";\r\nimport About from \"./components/navBar/About\";\r\nimport Support from \"./components/navBar/Support\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport VerifySuggest from \"./components/suggestions/VerifySuggest\";\r\nimport Events from \"./components/events/Events\";\r\nimport Login from \"./components/authorization/Login\";\r\nimport Signup from \"./components/authorization/SignUp\";\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<Route exact path='/home' component={Home} />\r\n\t\t\t<Route exact path='/about' component={About} />\r\n\t\t\t<Route exact path='/support' component={Support} />\r\n\t\t\t<Route exact path='/' component={Login} />\r\n\t\t\t<Route exact path='/signup' component={Signup} />\r\n\t\t\t<Route exact path='/addSuggestion' component={AddSuggestion} />\r\n\t\t\t<Route exact path='/suggestionsList' component={SuggestionsList} />\r\n\t\t\t<Route exact path='/events' component={Events} />\r\n\t\t\t<Route exact path='/verifySuggestion' component={VerifySuggest} />\r\n\t\t</Router>\r\n\t);\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js",["88"],"import { observable, computed, action, makeObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\nexport class EventsStore {\r\n\tconstructor() {\r\n\t\tthis.events = [];\r\n\t\tthis.user = null;\r\n\t\tthis.dateRange = [1600, 2000];\r\n\t\tthis.countries = [];\r\n\t\tthis.currentSuggestion = {};\r\n\r\n\t\tmakeObservable(this, {\r\n\t\t\tevents: observable,\r\n\t\t\tuser: observable,\r\n\t\t\tdateRange: observable,\r\n\t\t\tcountries: observable,\r\n\t\t\tcurrentSuggestion: observable,\r\n\t\t\teventsRender: action,\r\n\t\t\tsetDateRange: action,\r\n\t\t\taddCountriesToStore: action,\r\n\t\t\tcurrentSuggestionFunction: action,\r\n\t\t\tapproveSuggestion: action,\r\n\t\t\tdeleteSuggestion: action,\r\n\t\t});\r\n\t}\r\n\r\n\tsetDateRange = (val) => {\r\n\t\tthis.dateRange = val;\r\n\t};\r\n\r\n\tuserLogin = async (user) => {\r\n\t\tconst data = await axios.post(\"http://localhost:4200/login\", user);\r\n\t\tif (data.data) {\r\n\t\t\tthis.user = data.data;\r\n\t\t} else {\r\n\t\t\talert(\"username or password is not correct\");\r\n\t\t}\r\n\t};\r\n\r\n\tcurrentSuggestionFunction = (suggestion) => {\r\n\t\tconsole.log(suggestion);\r\n\t\tthis.currentSuggestion = suggestion;\r\n\t};\r\n\taddCountriesToStore = (country) => {\r\n\t\tthis.countries.push(country);\r\n\t\tconsole.log(this.countries);\r\n\t};\r\n\r\n\teventsRender = async () => {\r\n\t\tconst countries = this.countries;\r\n\t\tconst startDate = this.dateRange[0];\r\n\t\tconst endDate = this.dateRange[1];\r\n\t\tconst eventsData = { startDate, endDate, countries };\r\n\t\tlet data = await axios.post(\"http://localhost:4200/events\", eventsData);\r\n\t\tdata = data.data;\r\n\t\tfor (let i of data) {\r\n\t\t\tfor (let j of i) {\r\n\t\t\t\tthis.events.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(this.events);\r\n\t};\r\n\tapproveSuggestion = async (id) => {\r\n\t\tawait axios.put(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\tdeleteSuggestion = async (id) => {\r\n\t\tawait axios.delete(`http://localhost:4200/event/${id}`);\r\n\t};\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js",["89"],"import React, { useState, useEffect } from \"react\";\r\nimport { CssBaseline, Container, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport axios from \"axios\";\r\n\r\nfunction AddSuggestion(props) {\r\n\tconst [selectedStartDate, setStartSelectedDate] = useState(new Date());\r\n\tconst [selectedEndDate, setEndSelectedDate] = useState(new Date());\r\n\tconst [selectedFiles, setSelectedFiles] = useState(\"\");\r\n\tconst [imageDescription, setImageDescription] = useState(\"\");\r\n\tconst [image, setImage] = useState({ imageTitle: \"\", imageURL: \"\", id: \"\" });\r\n\tconst [gallery, setGallery] = useState([]);\r\n\tconst [inputs, setInputs] = useState({\r\n\t\ttitle: \"\",\r\n\t\tcountries: [],\r\n\t\tdescription: \"\",\r\n\t\tstartDate: null,\r\n\t\tendDate: null,\r\n\t});\r\n\r\n\tconst url = \"https://api.cloudinary.com/v1_1/domephsm4/image/upload\"; // link to cloudinary\r\n\tconst preset = \"natalia\"; // where we save all the images // url\r\n\r\n\tconst handleStartDateChange = (date) => {\r\n\t\tsetStartSelectedDate(date);\r\n\t};\r\n\r\n\tconst handleEndDateChange = (date) => {\r\n\t\tsetEndSelectedDate(date);\r\n\t};\r\n\r\n\tconst fileChangedHandler = ({ target }) => {\r\n\t\tsetSelectedFiles(target.files[0]);\r\n\t};\r\n\r\n\tconst uploadHandler = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", selectedFiles); // file equls to type\r\n\t\tformData.append(\"upload_preset\", preset);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, formData);\r\n\t\t\tconst imageUrl = res.data.secure_url;\r\n\t\t\tlet tempImage = { ...image };\r\n\t\t\ttempImage.imageURL = imageUrl;\r\n\t\t\ttempImage.imageTitle = imageDescription;\r\n\t\t\ttempImage.id = res.data.public_id;\r\n\t\t\tsetImage(tempImage);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempGallery = [...gallery];\r\n\t\tif (image.imageURL !== \"\") {\r\n\t\t\ttempGallery.push(image);\r\n\t\t\tsetGallery(tempGallery);\r\n\t\t}\r\n\t}, [image]);\r\n\r\n\tconst inputsHandler = ({ target }) => {\r\n\t\tlet tempObj = { ...inputs };\r\n\t\ttempObj[target.name] = target.value;\r\n\t\tsetInputs(tempObj);\r\n\t};\r\n\r\n\tconst sendNewEvent = async () => {\r\n\t\tlet newEvent = {\r\n\t\t\ttitle: `${inputs.title}, ${selectedStartDate\r\n\t\t\t\t.toDateString()\r\n\t\t\t\t.slice(3)} - ${selectedEndDate.toDateString().slice(3)} `,\r\n\t\t\tstartDate: selectedStartDate.getFullYear(),\r\n\t\t\tendDate: selectedEndDate.getFullYear(),\r\n\t\t\tdescription: inputs.description,\r\n\t\t\tcountries: [inputs.countries],\r\n\t\t\tgallery: gallery,\r\n\t\t\tusername: props.EventsStore.user.username,\r\n\t\t};\r\n\t\tawait axios.post(\"http://localhost:4200/event\", newEvent);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<Container maxWidth='sm'>\r\n\t\t\t\t<h4>Send us your (hi)story</h4>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\tvalue={inputs.title}\r\n\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tname='countries'\r\n\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\tlabel='Country'\r\n\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\tvalue={inputs.countries}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils} onChange={inputsHandler}>\r\n\t\t\t\t\t\t<Grid container justify='space-around'>\r\n\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\tname='startDate'\r\n\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\tvariant='inline'\r\n\t\t\t\t\t\t\t\tformat='MM/dd/yyyy'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\tid='date-picker-inline'\r\n\t\t\t\t\t\t\t\tlabel='Start date'\r\n\t\t\t\t\t\t\t\tminDate='Date(1600-01-01)'\r\n\t\t\t\t\t\t\t\tvalue={selectedStartDate}\r\n\t\t\t\t\t\t\t\tonChange={handleStartDateChange}\r\n\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\tname='endDate'\r\n\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\tid='date-picker-dialog'\r\n\t\t\t\t\t\t\t\tlabel='End date'\r\n\t\t\t\t\t\t\t\tformat='MM/dd/yyyy'\r\n\t\t\t\t\t\t\t\tminDate='Date(1600-01-01)'\r\n\t\t\t\t\t\t\t\tvalue={selectedEndDate}\r\n\t\t\t\t\t\t\t\tonChange={handleEndDateChange}\r\n\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t<div for='w3review'>Description</div>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\tid='w3review'\r\n\t\t\t\t\t\trows='15'\r\n\t\t\t\t\t\tcols='80'\r\n\t\t\t\t\t\tvalue={inputs.description}\r\n\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\tUpload images (optional):\r\n\t\t\t\t\t\t<div className='uploadImage'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName='uploadFile'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<Button onClick={uploadHandler} variant='contained'>\r\n\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='uploadImage'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName='uploadFile'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<Button onClick={uploadHandler} variant='contained'>\r\n\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='uploadImage'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName='uploadFile'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<Button onClick={uploadHandler} variant='contained'>\r\n\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='uploadImage'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tclassName='uploadFile'\r\n\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<Button onClick={uploadHandler} variant='contained'>\r\n\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t{/* <Button variant=\"contained\" component=\"label\" > Upload File <input type=\"file\" hidden/>\r\n               </Button> */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button onClick={sendNewEvent} variant='contained'>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Container>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\nexport default inject(\"EventsStore\")(observer(AddSuggestion));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js",["90"],"import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"date-fns\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { set } from \"mobx\";\r\n\r\nconst VerifySuggest = inject(\"EventsStore\")(\r\n\tobserver((props) => {\r\n\t\tconst [suggestion, setSuggestion] = useState({});\r\n\t\tconst [descriptionImage, setDescriptionImage] = useState(\"\");\r\n\t\tconst [URLImage, setURLImage] = useState(\"\");\r\n\t\tuseEffect(() => {\r\n\t\t\tsetSuggestion(props.EventsStore.currentSuggestion);\r\n\t\t}, [props.EventsStore.currentSuggestion]);\r\n\r\n\t\tconst handleInputChange = ({ target }) => {\r\n\t\t\tlet obj = { ...suggestion };\r\n\t\t\tif (target.name === \"startDate\" || target.name === \"endDate\") {\r\n\t\t\t\tconsole.log(Number(target.value));\r\n\t\t\t\tobj[target.name] = Number(target.value);\r\n\t\t\t} else {\r\n\t\t\t\tobj[target.name] = target.value;\r\n\t\t\t}\r\n\t\t\tsetSuggestion(obj);\r\n\t\t};\r\n\t\tconst url = \"https://api.cloudinary.com/v1_1/domephsm4/image/upload\"; // link to cloudinary\r\n\t\tconst preset = \"natalia\"; // where we save all the images // url\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t<Container maxWidth='sm'>\r\n\t\t\t\t\t\t<h4>Send us your (hi)story</h4>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\t\tvalue={suggestion.title}\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='countries'\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='Country'\r\n\t\t\t\t\t\t\t\tvalue={suggestion.countries}\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='startDate'\r\n\t\t\t\t\t\t\t\ttype='nubmer'\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='StartDate'\r\n\t\t\t\t\t\t\t\tvalue={suggestion.startDate}\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tname='endDate'\r\n\t\t\t\t\t\t\t\ttype='nubmer'\r\n\t\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\t\tlabel='EndDate'\r\n\t\t\t\t\t\t\t\tvalue={suggestion.endDate}\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div for='w3review'>Description</div>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tid='w3review'\r\n\t\t\t\t\t\t\t\trows='15'\r\n\t\t\t\t\t\t\t\tcols='80'\r\n\t\t\t\t\t\t\t\tvalue={suggestion.description}\r\n\t\t\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{suggestion.gallery &&\r\n\t\t\t\t\t\t\t\t\tsuggestion.gallery.map((m, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={({ target }) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet obj = { ...suggestion };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tobj.gallery[index].imageTitle =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tobj.gallery[index].imageURL =\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tm.imageURL;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSuggestion(obj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={m.imageTitle}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth='300px'\r\n\t\t\t\t\t\t\t\t\t\t\t\theight='300px'\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={m.imageURL}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=''\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet obj = { ...suggestion };\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tobj.gallery.splice(index, 1);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSuggestion(obj);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\tDELETE\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tonChange={({ target }) => {\r\n\t\t\t\t\t\t\t\t\t\tsetURLImage(target.files[0]);\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tonChange={({ target }) =>\r\n\t\t\t\t\t\t\t\t\t\tsetDescriptionImage(target.value)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvalue={descriptionImage}\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tplaceholder='Description'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={async () => {\r\n\t\t\t\t\t\t\t\t\t\tconst formData = new FormData();\r\n\t\t\t\t\t\t\t\t\t\tformData.append(\"file\", URLImage); // file equls to type\r\n\t\t\t\t\t\t\t\t\t\tformData.append(\"upload_preset\", preset);\r\n\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\tconst res = await axios.post(url, formData);\r\n\t\t\t\t\t\t\t\t\t\t\tconst imageUrl = res.data.secure_url;\r\n\t\t\t\t\t\t\t\t\t\t\tlet obj = { ...suggestion };\r\n\t\t\t\t\t\t\t\t\t\t\tobj.gallery.push({\r\n\t\t\t\t\t\t\t\t\t\t\t\tid: res.data.public_id,\r\n\t\t\t\t\t\t\t\t\t\t\t\timageTitle: descriptionImage,\r\n\t\t\t\t\t\t\t\t\t\t\t\timageURL: imageUrl,\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tsetSuggestion(obj);\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tUpload\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Link to='/suggestionsList'>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tprops.EventsStore.approveSuggestion(\r\n\t\t\t\t\t\t\t\t\t\t\tsuggestion._id\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tAPPROVE\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link to='/suggestionsList'>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\tprops.EventsStore.deleteSuggestion(suggestion._id)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tReject\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t);\r\n\t\t\t</div>\r\n\t\t);\r\n\t})\r\n);\r\n\r\nexport default VerifySuggest;\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js",["91"],"\r\nimport {Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Paper, Box, Grid, Typography } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n function SignUp(props) {\r\nconst [username, setUsername] = useState('')\r\nconst [password, setPassword] = useState('')\r\n   \r\nconst classes = useStyles();\r\n\r\n\r\nconst addNewUser = async ()=>{\r\n  let newUser = {username, password}\r\n await axios.post(\"http://localhost:4200/signup\", newUser)\r\n window.location.href  = \"http://localhost:3000/\"\r\n}\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Name\"\r\n              name=\"username\"\r\n              autoComplete=\"name\"\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n            //   type=\"submit\"\r\n              fullWidth\r\n               variant=\"contained\"\r\n              color=\"primary\"\r\n            //   className={classes.submit}\r\n              onClick={addNewUser}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default inject(\"EventsStore\")(observer(SignUp))\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js",["92","93","94","95"],"import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nconst About = () => {\r\n\twindow.responsiveVoice.speak(\r\n\t\t\"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Culpa ipsum quam fugiat, vero error eum enim ab, architecto recusandae nemo velit minus earum maiores inventore debitis ex, nesciunt dignissimos quidem.\"\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tLorem ipsum, dolor sit amet consectetur adipisicing elit. Culpa ipsum quam fugiat,\r\n\t\t\tvero error eum enim ab, architecto recusandae nemo velit minus earum maiores\r\n\t\t\tinventore debitis ex, nesciunt dignissimos quidem.\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js",["96","97","98"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Support() {\r\n  return (\r\n   < div>Support</div>\r\n  );\r\n}","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js",["99","100"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'©Elevation Academy - DreamTeam '}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userLogin = async () => {\r\n        console.log(username, password)\r\n        await props.EventsStore.userLogin({ username, password })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"User Name\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={userLogin}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    {props.EventsStore.user ? <Redirect to=\"/home\" /> : null}\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Login))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js",["101","102"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js",["103","104"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { inject, observer} from 'mobx-react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HomeButton(props) {\r\n  const classes = useStyles();\r\n\r\n  const eventsPage = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Link to=\"/events\">\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={props.EventsStore.eventsRender}> \r\n                Search!\r\n            </Button>\r\n        </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(HomeButton))",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":15},{"ruleId":"109","severity":1,"message":"113","line":10,"column":42,"nodeType":"111","messageId":"112","endLine":10,"endColumn":46},{"ruleId":"109","severity":1,"message":"114","line":1,"column":22,"nodeType":"111","messageId":"112","endLine":1,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":62,"column":5,"nodeType":"117","endLine":62,"endColumn":12,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":11,"column":10,"nodeType":"111","messageId":"112","endLine":11,"endColumn":13},{"ruleId":"109","severity":1,"message":"120","line":6,"column":27,"nodeType":"111","messageId":"112","endLine":6,"endColumn":36},{"ruleId":"109","severity":1,"message":"121","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":33},{"ruleId":"109","severity":1,"message":"122","line":1,"column":35,"nodeType":"111","messageId":"112","endLine":1,"endColumn":40},{"ruleId":"109","severity":1,"message":"113","line":1,"column":42,"nodeType":"111","messageId":"112","endLine":1,"endColumn":46},{"ruleId":"109","severity":1,"message":"123","line":2,"column":17,"nodeType":"111","messageId":"112","endLine":2,"endColumn":26},{"ruleId":"109","severity":1,"message":"121","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"122","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":40},{"ruleId":"109","severity":1,"message":"113","line":3,"column":42,"nodeType":"111","messageId":"112","endLine":3,"endColumn":46},{"ruleId":"109","severity":1,"message":"124","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":24},{"ruleId":"109","severity":1,"message":"125","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":16},{"ruleId":"109","severity":1,"message":"121","line":24,"column":27,"nodeType":"111","messageId":"112","endLine":24,"endColumn":33},{"ruleId":"109","severity":1,"message":"122","line":24,"column":35,"nodeType":"111","messageId":"112","endLine":24,"endColumn":40},{"ruleId":"109","severity":1,"message":"126","line":5,"column":16,"nodeType":"111","messageId":"112","endLine":5,"endColumn":24},{"ruleId":"109","severity":1,"message":"127","line":19,"column":9,"nodeType":"111","messageId":"112","endLine":19,"endColumn":19},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'MyGlobe' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'computed' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gallery'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'set' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Component' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Redirect' is defined but never used.","'eventsPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [gallery, image]",{"range":"133","text":"134"},[2019,2026],"[gallery, image]"]