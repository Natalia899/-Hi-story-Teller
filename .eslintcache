[{"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js":"1","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js":"2","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js":"3","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js":"4","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js":"5","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js":"6","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js":"7","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Event.js":"8","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js":"9","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js":"10","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizQuestion.js":"11","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\EndGame.js":"12","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js":"13","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js":"14","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js":"15","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizStart.js":"16","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js":"17","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js":"18","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js":"19","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js":"20","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VeifyInputs.js":"21","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\UploadImages.js":"22","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\RendererImages.js":"23","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VerifyButtons.js":"24","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestionComponents\\UploadImages.js":"25","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js":"26","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\AppBar.js":"27","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\UseStyleNavbar.js":"28","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\NavBarList.js":"29","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\Logo.js":"30","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js":"31"},{"size":704,"mtime":1610914748060,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1610914748060,"results":"34","hashOfConfig":"33"},{"size":2325,"mtime":1611611705056,"results":"35","hashOfConfig":"33"},{"size":2309,"mtime":1611611715285,"results":"36","hashOfConfig":"33"},{"size":2703,"mtime":1611611715323,"results":"37","hashOfConfig":"33"},{"size":2236,"mtime":1611620557983,"results":"38","hashOfConfig":"33"},{"size":1131,"mtime":1611611704998,"results":"39","hashOfConfig":"33"},{"size":5830,"mtime":1611611704997,"results":"40","hashOfConfig":"33"},{"size":2141,"mtime":1611620831446,"results":"41","hashOfConfig":"33"},{"size":3830,"mtime":1611603432483,"results":"42","hashOfConfig":"33"},{"size":2086,"mtime":1611611705007,"results":"43","hashOfConfig":"33"},{"size":642,"mtime":1611603456151,"results":"44","hashOfConfig":"33"},{"size":707,"mtime":1611611715288,"results":"45","hashOfConfig":"33"},{"size":5306,"mtime":1611613159530,"results":"46","hashOfConfig":"33"},{"size":3357,"mtime":1611611715321,"results":"47","hashOfConfig":"33"},{"size":2169,"mtime":1611614084728,"results":"48","hashOfConfig":"33"},{"size":2557,"mtime":1611611705001,"results":"49","hashOfConfig":"33"},{"size":1464,"mtime":1611611715304,"results":"50","hashOfConfig":"33"},{"size":955,"mtime":1611603432487,"results":"51","hashOfConfig":"33"},{"size":1208,"mtime":1611603432488,"results":"52","hashOfConfig":"33"},{"size":1054,"mtime":1611611715331,"results":"53","hashOfConfig":"33"},{"size":1313,"mtime":1611611715330,"results":"54","hashOfConfig":"33"},{"size":968,"mtime":1611611715328,"results":"55","hashOfConfig":"33"},{"size":699,"mtime":1611613531289,"results":"56","hashOfConfig":"33"},{"size":2787,"mtime":1611611715319,"results":"57","hashOfConfig":"33"},{"size":20827,"mtime":1611422892412,"results":"58","hashOfConfig":"33"},{"size":937,"mtime":1611611715307,"results":"59","hashOfConfig":"33"},{"size":1487,"mtime":1611611715310,"results":"60","hashOfConfig":"33"},{"size":2589,"mtime":1611611715309,"results":"61","hashOfConfig":"33"},{"size":185,"mtime":1611603432477,"results":"62","hashOfConfig":"33"},{"size":4385,"mtime":1611613269649,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"9vty2w",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"66"},"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js",[],["139","140"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js",["141"],"import { observable, computed, action, makeObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\nexport class EventsStore {\r\n\tconstructor() {\r\n\t\tthis.events = [];\r\n\t\tthis.user = null;\r\n\t\t\r\n\t\tthis.dateRange = [1600, 2000];\r\n\t\tthis.countries = [];\r\n\t\tthis.currentSuggestion = {};\r\n        this.quiz = [];\r\n\t\tthis.score = {};\r\n\t\r\n\r\n\t\tmakeObservable(this, {\r\n\t\t\tevents: observable,\r\n\t\t\tuser: observable,\r\n\t\t\r\n\t\t\tdateRange: observable,\r\n\t\t\tcountries: observable,\r\n            currentSuggestion: observable,\r\n\t\t\tscore: observable,\r\n\t\t\t\r\n\t\t\teventsRender: action,\r\n\t\t\tsetDateRange: action,\r\n\t\t\taddCountriesToStore: action,\r\n\t\t\tcurrentSuggestionFunction: action,\r\n\t\t\tapproveSuggestion: action,\r\n\t\t\tdeleteSuggestion: action,\r\n\t\t\tquiz:observable,\r\n            getQuiz: action,\r\n            quizScore: action,\r\n\t\t});\r\n\t}\r\n\r\n\tsetDateRange = (val) => {\r\n\t\tthis.dateRange = val;\r\n\t};\r\n\r\n\tuserLogin = async (user) => {\r\n\t\tconst data = await axios.post(\"http://localhost:4200/login\", user);\r\n\t\tif (data.data) {\r\n\t\t\tthis.user = data.data;\r\n\t\t} else {\r\n\t\t\talert(\"username or password is not correct\");\r\n\t\t}\r\n\t};\r\n\r\n\tcurrentSuggestionFunction = (suggestion) => {\r\n\t\tconsole.log(suggestion);\r\n\t\tthis.currentSuggestion = suggestion;\r\n\t};\r\n\taddCountriesToStore = (country) => {\r\n\t\tthis.countries.push(country);\r\n\t\tconsole.log(this.countries);\r\n\t};\r\n\r\n\teventsRender = async () => {\r\n\t\tconst countries = this.countries;\r\n\t\tconst startDate = this.dateRange[0];\r\n\t\tconst endDate = this.dateRange[1];\r\n\t\tconst eventsData = { startDate, endDate, countries };\r\n\t\tlet data = await axios.post(\"http://localhost:4200/events\", eventsData);\r\n\t\tdata = data.data;\r\n\t\tfor (let i of data) {\r\n\t\t\tfor (let j of i) {\r\n\t\t\t\tthis.events.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(this.events);\r\n    };\r\n    \r\n    addingComment = async (newComment, id) => {\r\n        await axios.put(`http://localhost:4200/comment/${id}`, newComment)\r\n    }\r\n\r\n\tapproveSuggestion = async (id) => {\r\n\t\tawait axios.put(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\tdeleteSuggestion = async (id) => {\r\n\t\tawait axios.delete(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\r\n\tgetQuiz = async () => {\r\n\tlet result = await axios.get('http://localhost:4200/quiz')\r\n\tthis.quiz = result.data\r\n    };\r\n    \r\n    quizScore = (score) => {\r\n        this.score = score\r\n        console.log(this.score)\r\n    }\r\n\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js",["142","143"],"import React, { useEffect, useState } from \"react\";\r\nimport { Home } from './components/home/Home'\r\nimport AddSuggestion from './components/suggestions/AddSuggestion'\r\nimport SuggestionsList from './components/suggestions/SuggestionsList'\r\nimport About from './components/navBar/About'\r\nimport Support from './components/navBar/Support'\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport VerifySuggest from \"./components/suggestions/VerifySuggest\";\r\nimport Events from './components/events/Events'\r\nimport Login from './components/authorization/Login'\r\nimport Signup from './components/authorization/SignUp'\r\nimport Event from './components/events/Event';\r\nimport QuizStart from './components/quiz/QuizStart';\r\nimport QuizQuestion from './components/quiz/QuizQuestion';\r\nimport EndGame from './components/quiz/EndGame'\r\n//import QuizSocket from './components/quiz/QuizSocket';\r\n// import EndGameSocket from \"./components/quiz/EndGameSocket\";\r\n// import { Match } from './components/quiz/MatchType'\r\n// const socketIOClient = require('socket.io-client');\r\n// const ENDPOINT = 'ws://localhost:4200';\r\n\r\n\r\n\r\nexport default function App() {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/support\" component={Support} />\r\n        <Route exact path=\"/\" component={Login} />\r\n        <Route exact path=\"/signup\" component={Signup} />\r\n        <Route exact path=\"/addSuggestion\" component={AddSuggestion} />\r\n        <Route exact path=\"/suggestionsList\" component={SuggestionsList} />\r\n        <Route exact path=\"/events\" component={Events} />\r\n        <Route exact path=\"/event/:id\" component={Event} />\r\n        <Route exact path='/verifySuggestion' component={VerifySuggest} />\r\n        <Route exact path=\"/quiz\" component={QuizStart} />\r\n        <Route exact path=\"/quiz/:eventId\" component={QuizQuestion} />\r\n        <Route exact path=\"/endGame\" component={EndGame} />\r\n        {/* <Route exact path=\"/quizSocket/:eventId\" component={QuizSocket} /> */}\r\n        {/* <Route exact path=\"/endGameSocket\" component={EndGameSocket} />\r\n        <Route exact path=\"/matchType\" component={Match} /> */}\r\n      </Router>\r\n\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js",["144","145","146","147"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js",["148","149","150"],"import { Link } from \"react-router-dom\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport Event from \"./Event\";\r\nimport \"../Styles/Events.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Events(props) {\r\n\tlet { events } = props.EventsStore;\r\n\r\n\treturn (\r\n\t\t<div className='collections-container'>\r\n\t\t\t{events.map((event) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className='collection-container'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\r\n\t\t\t\t\t\t\t\tfontSize: \"0.5em\",\r\n\t\t\t\t\t\t\t\twidth: \"200px\",\r\n\t\t\t\t\t\t\t\tlineHeight: \"3.2em\",\r\n\t\t\t\t\t\t\t\tcolor: \"rgba(80,80,80,1)\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h1>{event.title}</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Link to={`/event/${event._id}`}>\r\n\t\t\t\t\t\t\t{console.log(`${event._id}`)}\r\n\t\t\t\t\t\t\t<img\r\n                                style={{\r\n                                    outline:\"4px solid rgba(80,80,80,1)\"\r\n                                }}\r\n\t\t\t\t\t\t\t\twidth='200px'\r\n\t\t\t\t\t\t\t\theight='200px'\r\n\t\t\t\t\t\t\t\tsrc={event.gallery[0].imageURL}\r\n\t\t\t\t\t\t\t\talt=''\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Events));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Event.js",["151","152","153"],"\r\nimport { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport \"./Event.css\"\r\n\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction Event(props) {\r\n    let { events } = props.EventsStore\r\n    const eventId = props.match.params.id\r\n    const user = props.EventsStore.user.username\r\n\r\n    let event = events.find(event => event._id === eventId)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n\r\n                margin: theme.spacing(1)\r\n            },\r\n            width: '100%',\r\n            heading: {\r\n                fontSize: theme.typography.pxToRem(15),\r\n                fontWeight: theme.typography.fontWeightRegular,\r\n            }\r\n        }\r\n    }));\r\n\r\n\r\n    const [input, setInput] = useState(\"\")\r\n    const [comments, setComments] = useState([])\r\n\r\n    const inputHandler = (event) => {\r\n        setInput(event.target.value)\r\n    }\r\n\r\n    const shareComment = (input) => {\r\n        let newComment = {comment: input, time: new Date(), username: user}\r\n        setComments([...comments, newComment])\r\n        props.EventsStore.addingComment(newComment, event._id)\r\n        setInput(\"\")\r\n    }\r\n\r\n\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<Link to='/events'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tmarginTop: \"1em\",\r\n\t\t\t\t\t\t\tmarginLeft: \"1em\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h1\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: \"rgba(80,80,80,1)\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{event.title}\r\n\t\t\t</h1>\r\n\t\t\t<h2\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tcolor: \"rgba(80,80,80,0.6)\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{event.startDate} - {event.endDate}\r\n\t\t\t</h2>\r\n\r\n\t\t\t<div className='gallery'>\r\n\t\t\t\t<div id='carousel'>\r\n\t\t\t\t\t{event.gallery.map((image) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<figure\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\t\twidth: \"350px\",\r\n\t\t\t\t\t\t\t\t\theight: \"350px\",\r\n\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${image.imageURL})`,\r\n\t\t\t\t\t\t\t\t\tbackgroundSize: \"cover\",\r\n\t\t\t\t\t\t\t\t\tbackgroundPosition: \"center\",\r\n\t\t\t\t\t\t\t\t\toutline: \"1px solid\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<h2\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"rgba(80,80,80,1)\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{image.imageTitle}\r\n\t\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t</figure>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<p\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\tjustifyContent: \"start\",\r\n\t\t\t\t\tfontSize: \"1.4em\",\r\n\t\t\t\t\tlineHeight: \"1.4em\",\r\n\t\t\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t\t\t\tpaddingLeft: \"9em\",\r\n\t\t\t\t\tfontWeight: \"lighter\",\r\n\t\t\t\t\tcolor: \"rgba(80,80,80,1)\",\r\n\t\t\t\t\tmaxWidth: \"1000px\",\r\n\t\t\t\t}}\r\n\t\t\t\tclassName='description'\r\n\t\t\t>\r\n\t\t\t\t{event.description}\r\n\t\t\t</p>\r\n\r\n            <div className={classes.root}>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                    <div style={{ \r\n                        display:\"grid\",\r\n                        justifyContent:\"center\",\r\n                    }} >\r\n\r\n                    <div>\r\n                        <Typography className= {classes.heading}>\r\n                            Share your thoughts!\r\n                        </Typography>\r\n                    </div>\r\n\r\n                    </div>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography>\r\n                            <label>user name: {user}</label>\r\n\r\n                            <TextField\r\n                            id=\"outlined-full-width\"\r\n                            label=\"type\"\r\n                            style={{ margin: 8 }}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            onChange={inputHandler}\r\n                            value={input}\r\n                          />\r\n\r\n                            <Button  onClick={() => shareComment(input)} size='small' variant=\"contained\" color=\"secondary\">\r\n                                Send!\r\n                            </Button>\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                    {comments ? comments.map(c => {return (\r\n                        <div>\r\n                            <div>\r\n                                user: {c.username}\r\n                            </div>\r\n                            <div>\r\n                                time: {c.time.toDateString().slice(3)}\r\n                            </div>\r\n                            <div>\r\n                                comment: {c.comment}\r\n                            </div><br></br>\r\n                        </div>\r\n                    )}): null}\r\n\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Event));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js",["154"],"\r\nimport {Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Paper, Box, Grid, Typography } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n function SignUp(props) {\r\nconst [username, setUsername] = useState('')\r\nconst [password, setPassword] = useState('')\r\n   \r\nconst classes = useStyles();\r\n\r\n\r\nconst addNewUser = async ()=>{\r\n  let newUser = {username, password}\r\n await axios.post(\"http://localhost:4200/signup\", newUser)\r\n window.location.href  = \"http://localhost:3000/\"\r\n}\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Name\"\r\n              name=\"username\"\r\n              autoComplete=\"name\"\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n            //   type=\"submit\"\r\n              fullWidth\r\n               variant=\"contained\"\r\n              color=\"primary\"\r\n            //   className={classes.submit}\r\n              onClick={addNewUser}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default inject(\"EventsStore\")(observer(SignUp))\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizQuestion.js",["155","156","157","158","159"],"\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\n\r\nfunction QuizQuestion(props) {\r\n\r\n\tconst [counter, setCounter] = useState(1)\r\n\tconst [score, setScore] = useState({})\r\n\r\n\tconst { quiz } = props.EventsStore\r\n\tconst eventId = props.match.params.eventId\r\n\tconst eventQuestions = quiz.find(q => { return q.id === eventId }).quiz\r\n\tconsole.log(eventQuestions)\r\n\r\n\tconst inputHandler = (event) => {\r\n\t\tconst choice = event.target.value\r\n\t\tconsole.log(event.target.value)\r\n\r\n\t\tconst result = eventQuestions[counter - 1].answerOptions.\r\n\t\t\tfind(ans => ans.answer === choice).isCorrect\r\n\t\tif (result === true) {\r\n\t\t\tlet newScore = { ...score }\r\n\t\t\tnewScore[counter] = 1\r\n\t\t\tsetScore(newScore)\r\n\t\t} else {\r\n\t\t\tlet newScore = { ...score }\r\n\t\t\tnewScore[counter] = 0\r\n\t\t\tsetScore(newScore)\r\n\t\t}\r\n\t}\r\n\r\n\tconst quizScore = () => {\r\n\t\tprops.EventsStore.quizScore(score)\r\n\t}\r\n\r\n\tconsole.log(score)\r\n\r\n\tconst checkAnswer = () => {\r\n\t\tsetCounter(counter + 1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t<FormLabel component=\"legend\">{eventQuestions[counter - 1].question}</FormLabel>\r\n\t\t\t\t<RadioGroup onChange={inputHandler}>\r\n\t\t\t\t\t{eventQuestions[counter - 1].answerOptions.map(({ answer }) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormControlLabel value={answer} control={<Radio />} label={answer}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t\t<div>\r\n\t\t\t\t{counter === 10 ?\r\n\t\t\t\t\t<Link to=\"/endGame\">\r\n\t\t\t\t\t\t<button onClick={quizScore}>End Game</button>\r\n\t\t\t\t\t</Link> : <button onClick={checkAnswer}>Next</button>}\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(QuizQuestion))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\EndGame.js",["160","161","162"],"import { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction EndGame(props) {\r\n    console.log(props.EventsStore.score)\r\n    const {score} = props.EventsStore\r\n\r\n    const calcScore = () => {\r\n        let sum = 0\r\n        for(let key in score){\r\n            sum += score[key]\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {sum}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Your score is:\r\n            {calcScore()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(EndGame))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js",["163","164"],"import React, { useEffect, useState } from \"react\";\r\nimport TimeLine from './TimeLine'\r\nimport NavBar from '../navBar/NavBar'\r\nimport {MyGlobe} from './WorldMap'\r\nimport HomeButton from './HomeButton'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport function Home(){\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <NavBar />\r\n            </div>\r\n            <div>\r\n                <MyGlobe />\r\n            </div>\r\n            <div>\r\n                <TimeLine /> \r\n            </div>\r\n            <div>\r\n                <HomeButton />\r\n            </div>\r\n              <Link to='/quiz'><StarIcon /></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js",["165"],"import React, { useState } from \"react\";\r\nimport { CssBaseline, Container, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport axios from \"axios\";\r\nimport UploadImages from './AddSuggestionComponents/UploadImages'\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tinputTitle: {\r\n\t\t\"& > *\": {\r\n\t\t\tfontSize: \"24px\",\r\n\t\t\tfontWeight: \"bold\",\r\n\t\t\tfontFamily: ` \"Neuton\", serif`,\r\n\t\t},\r\n\t},\r\n\tinputCountries: {\r\n\t\t\"& > *\": {\r\n\t\t\tfontSize: \"24px\",\r\n\t\t\tfontWeight: \"lighter\",\r\n\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t},\r\n\t},\r\n\tgridCointer: {\r\n\t\t\"& > *\": {\r\n\t\t\tdisplay: \"grid\",\r\n\t\t\tjustifyContent: \"start\",\r\n\t\t},\r\n\r\n\t\tmainGridContainer: {\r\n\t\t\t\"& > *\": {\r\n\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\tgridTemplateColumns: \"repeat(2,1fr)\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n}));\r\n\r\n\r\nfunction AddSuggestion(props) {\r\n\tconst [selectedStartDate, setStartSelectedDate] = useState(new Date());\r\n\tconst [selectedEndDate, setEndSelectedDate] = useState(new Date());\r\n\tconst [gallery, setGallery] = useState([]);\r\n\tconst [inputs, setInputs] = useState({ title: \"\", countries: [], description: \"\" });\r\n\tconst classes = useStyles();\r\n\r\n\tconst updateGallery = (updatedGallery) => {\r\n\t\tsetGallery(updatedGallery);\r\n\t};\r\n\r\n\tconst inputsHandler = ({ target }) => {\r\n\t\tlet tempObj = { ...inputs };\r\n\t\ttempObj[target.name] = target.value;\r\n\t\tsetInputs(tempObj);\r\n\t};\r\n\r\n\tconst sendNewEvent = async () => {\r\n\t\tlet newEvent = {\r\n\t\t\ttitle: `${inputs.title}, ${selectedStartDate\r\n\t\t\t\t.toDateString()\r\n\t\t\t\t.slice(3)} - ${selectedEndDate.toDateString().slice(3)} `,\r\n\t\t\tstartDate: selectedStartDate.getFullYear(),\r\n\t\t\tendDate: selectedEndDate.getFullYear(),\r\n\t\t\tdescription: inputs.description,\r\n\t\t\tcountries: [inputs.countries],\r\n\t\t\tgallery: gallery,\r\n\t\t\tusername: props.EventsStore.user.username,\r\n\t\t};\r\n\t\tawait axios.post(\"http://localhost:4200/event\", newEvent);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginTop: \"1em\",\r\n\t\t\t\t\tmarginLeft: \"1em\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Link to='/home'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\tfontSize: \"4em\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(200,200,200,0.2)\",\r\n\t\t\t\t\t\t\twidth: \"0.8em\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: \"0.7em\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: \"10em\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<h4>Send us your (hi)story</h4>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div id='container' className={classes.gridCointer}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tclassName={classes.inputTitle}\r\n\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t\tvalue={inputs.title}\r\n\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tclassName={classes.inputCountries}\r\n\t\t\t\t\t\t\tname='countries'\r\n\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\tlabel='Countries'\r\n\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t\tvalue={inputs.countries}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider\r\n\t\t\t\t\t\t\tutils={DateFnsUtils}\r\n\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container justify='space-around'>\r\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\tname='startDate'\r\n\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\tvariant='inline'\r\n\t\t\t\t\t\t\t\t\tformat='MM/dd/yyyy'\r\n\t\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\t\tid='date-picker-inline'\r\n\t\t\t\t\t\t\t\t\tlabel='Start date'\r\n\t\t\t\t\t\t\t\t\tminDate='Date(1600-01-01)'\r\n\t\t\t\t\t\t\t\t\tvalue={selectedStartDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => setStartSelectedDate(date)}\r\n\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\tname='endDate'\r\n\t\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\t\tid='date-picker-dialog'\r\n\t\t\t\t\t\t\t\t\tlabel='End date'\r\n\t\t\t\t\t\t\t\t\tformat='MM/dd/yyyy'\r\n\t\t\t\t\t\t\t\t\tminDate='Date(1600-01-01)'\r\n\t\t\t\t\t\t\t\t\tvalue={selectedEndDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => setEndSelectedDate(date)}\r\n\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: \"1.5em\",\r\n\t\t\t\t\t\t\tletterSpacing: \"0.2em\",\r\n\t\t\t\t\t\t\tfontWeight: \"lighter\",\r\n\t\t\t\t\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tfor='w3review'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDescription\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\t\t\tgridTemplateColumns: \"2fr 2fr\",\r\n\t\t\t\t\t\t\tgap: \"3em\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"lighter\",\r\n\t\t\t\t\t\t\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t\t\t\t\t\t\t\tfontSize: \"24px\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tid='w3review'\r\n\t\t\t\t\t\t\t\trows='15'\r\n\t\t\t\t\t\t\t\tcols='80'\r\n\t\t\t\t\t\t\t\tvalue={inputs.description}\r\n\t\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<UploadImages updateGallery={updateGallery} />\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"3em\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={sendNewEvent}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default inject(\"EventsStore\")(observer(AddSuggestion));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizStart.js",["166","167","168","169","170","171","172"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js",["173","174"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../Styles/HomeButtom.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction HomeButton(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst eventsPage = () => {};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className='hone-button-container'>\r\n\t\t\t\t<Link to='/events'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(2, 2, 8,0.8)\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName='slpioo'\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\tonClick={props.EventsStore.eventsRender}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSearch!\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(HomeButton));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VeifyInputs.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\UploadImages.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\RendererImages.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VerifyButtons.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestionComponents\\UploadImages.js",["175"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n}));\r\n\r\nfunction UploadImages(props) {\r\n\tconst [selectedFiles, setSelectedFiles] = useState(\"\");\r\n\tconst [imageDescription, setImageDescription] = useState(\"\");\r\n\tconst [image, setImage] = useState({ imageTitle: \"\", imageURL: \"\", id: \"\" });\r\n\tconst [gallery, setGallery] = useState([]);\r\n\r\n\tconst url = \"https://api.cloudinary.com/v1_1/domephsm4/image/upload\";\r\n\tconst preset = \"natalia\";\r\n\r\n\tconst fileChangedHandler = ({ target }) => {\r\n\t\tsetSelectedFiles(target.files[0]);\r\n\t};\r\n\r\n\tconst uploadHandler = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", selectedFiles);\r\n\t\tformData.append(\"upload_preset\", preset);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, formData);\r\n\t\t\tlet tempImage = { ...image };\r\n\t\t\ttempImage.imageURL = res.data.secure_url;\r\n\t\t\ttempImage.imageTitle = imageDescription;\r\n\t\t\ttempImage.id = res.data.public_id;\r\n\t\t\tsetImage(tempImage);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempGallery = [...gallery];\r\n\t\tif (image.imageURL !== \"\") {\r\n\t\t\ttempGallery.push(image);\r\n\t\t\tsetGallery(tempGallery);\r\n\t\t\tprops.updateGallery(gallery);\r\n\t\t}\r\n\t}, [image]);\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\" \"}\r\n\t\t\tUpload images (optional):\r\n\t\t\t<div className='uploadImage'>\r\n\t\t\t\t<input\r\n\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\tid='icon-button-file'\r\n\t\t\t\t\ttype='file'\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='icon-button-file'>\r\n\t\t\t\t\t<IconButton color='primary' aria-label='upload picture' component='span'>\r\n\t\t\t\t\t\t<PhotoCamera />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</label>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tstyle={{ display: \"inline-block\" }}\r\n\t\t\t\t\tname='title'\r\n\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ display: \"inline\" }}\r\n\t\t\t\t\tonClick={uploadHandler}\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t>\r\n\t\t\t\t\tUpload\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t{gallery &&\r\n\t\t\t\tgallery.map((image) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img width='300px' height='300px' src={image.imageURL} alt='' />\r\n\t\t\t\t\t\t\t<p>{image.imageTitle}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default inject(\"EventsStore\")(observer(UploadImages));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\AppBar.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\UseStyleNavbar.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\NavBarList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\Logo.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js",["176","177","178"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom'\r\n// const socketIOClient = require('socket.io-client');\r\n// const ENDPOINT = 'ws://localhost:4200';\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'©Elevation Academy - DreamTeam '}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userLogin = async () => {\r\n        await props.EventsStore.userLogin({ username, password })\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     const socket = socketIOClient(ENDPOINT)\r\n    //     socket.emit(\"join\", {username, password})\r\n    // },[username, password])\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"User Name\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={userLogin}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    {props.EventsStore.user ? <Redirect to=\"/home\" /> : null}\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Login))",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":22,"nodeType":"185","messageId":"186","endLine":1,"endColumn":30},{"ruleId":"183","severity":1,"message":"187","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"188","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"189","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":33},{"ruleId":"183","severity":1,"message":"190","line":1,"column":35,"nodeType":"185","messageId":"186","endLine":1,"endColumn":40},{"ruleId":"183","severity":1,"message":"191","line":1,"column":42,"nodeType":"185","messageId":"186","endLine":1,"endColumn":46},{"ruleId":"183","severity":1,"message":"192","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":26},{"ruleId":"183","severity":1,"message":"193","line":3,"column":8,"nodeType":"185","messageId":"186","endLine":3,"endColumn":13},{"ruleId":"183","severity":1,"message":"187","line":5,"column":10,"nodeType":"185","messageId":"186","endLine":5,"endColumn":19},{"ruleId":"183","severity":1,"message":"188","line":5,"column":21,"nodeType":"185","messageId":"186","endLine":5,"endColumn":29},{"ruleId":"183","severity":1,"message":"187","line":4,"column":17,"nodeType":"185","messageId":"186","endLine":4,"endColumn":26},{"ruleId":"183","severity":1,"message":"194","line":15,"column":8,"nodeType":"185","messageId":"186","endLine":15,"endColumn":24},{"ruleId":"183","severity":1,"message":"195","line":17,"column":8,"nodeType":"185","messageId":"186","endLine":17,"endColumn":13},{"ruleId":"183","severity":1,"message":"187","line":6,"column":27,"nodeType":"185","messageId":"186","endLine":6,"endColumn":36},{"ruleId":"183","severity":1,"message":"187","line":3,"column":27,"nodeType":"185","messageId":"186","endLine":3,"endColumn":36},{"ruleId":"183","severity":1,"message":"189","line":4,"column":27,"nodeType":"185","messageId":"186","endLine":4,"endColumn":33},{"ruleId":"183","severity":1,"message":"190","line":4,"column":35,"nodeType":"185","messageId":"186","endLine":4,"endColumn":40},{"ruleId":"183","severity":1,"message":"196","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":27,"column":59,"nodeType":"199","messageId":"200","endLine":27,"endColumn":60,"fix":"201"},{"ruleId":"183","severity":1,"message":"191","line":1,"column":10,"nodeType":"185","messageId":"186","endLine":1,"endColumn":14},{"ruleId":"183","severity":1,"message":"187","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":19},{"ruleId":"183","severity":1,"message":"188","line":3,"column":21,"nodeType":"185","messageId":"186","endLine":3,"endColumn":29},{"ruleId":"183","severity":1,"message":"187","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":26},{"ruleId":"183","severity":1,"message":"188","line":1,"column":28,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"202","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":32},{"ruleId":"183","severity":1,"message":"203","line":8,"column":27,"nodeType":"185","messageId":"186","endLine":8,"endColumn":36},{"ruleId":"183","severity":1,"message":"189","line":9,"column":27,"nodeType":"185","messageId":"186","endLine":9,"endColumn":33},{"ruleId":"183","severity":1,"message":"190","line":9,"column":35,"nodeType":"185","messageId":"186","endLine":9,"endColumn":40},{"ruleId":"183","severity":1,"message":"204","line":9,"column":48,"nodeType":"185","messageId":"186","endLine":9,"endColumn":56},{"ruleId":"183","severity":1,"message":"205","line":15,"column":10,"nodeType":"185","messageId":"186","endLine":15,"endColumn":17},{"ruleId":"183","severity":1,"message":"206","line":15,"column":19,"nodeType":"185","messageId":"186","endLine":15,"endColumn":29},{"ruleId":"207","severity":1,"message":"208","line":25,"column":6,"nodeType":"209","endLine":25,"endColumn":8,"suggestions":"210"},{"ruleId":"183","severity":1,"message":"204","line":5,"column":16,"nodeType":"185","messageId":"186","endLine":5,"endColumn":24},{"ruleId":"183","severity":1,"message":"211","line":20,"column":8,"nodeType":"185","messageId":"186","endLine":20,"endColumn":18},{"ruleId":"207","severity":1,"message":"212","line":57,"column":5,"nodeType":"209","endLine":57,"endColumn":12,"suggestions":"213"},{"ruleId":"183","severity":1,"message":"187","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"183","severity":1,"message":"214","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":24},{"ruleId":"183","severity":1,"message":"215","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'Event' is defined but never used.","'TextareaAutosize' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"218","text":"219"},"'Container' is defined but never used.","'UseEffect' is defined but never used.","'Redirect' is defined but never used.","'players' is assigned a value but never used.","'setPlayers' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.EventsStore'. Either include it or remove the dependency array.","ArrayExpression",["220"],"'eventsPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gallery' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["221"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",[987,993],"\r\n\t\t\t.",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [props.EventsStore]",{"range":"226","text":"227"},"Update the dependencies array to be: [gallery, image, props]",{"range":"228","text":"229"},[912,914],"[props.EventsStore]",[1659,1666],"[gallery, image, props]"]