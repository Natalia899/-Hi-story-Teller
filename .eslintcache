[{"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js":"1","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js":"2","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js":"3","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js":"4","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js":"5","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js":"6","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js":"7","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js":"8","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js":"9","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js":"10","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js":"11","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js":"12","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js":"13","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js":"14","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js":"15","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js":"16","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js":"17","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js":"18"},{"size":704,"mtime":1610914748060,"results":"19","hashOfConfig":"20"},{"size":1359,"mtime":1611089517158,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1610914748060,"results":"22","hashOfConfig":"20"},{"size":1777,"mtime":1611109425059,"results":"23","hashOfConfig":"20"},{"size":1965,"mtime":1611089517163,"results":"24","hashOfConfig":"20"},{"size":5326,"mtime":1611089517165,"results":"25","hashOfConfig":"20"},{"size":513,"mtime":1611089517161,"results":"26","hashOfConfig":"20"},{"size":2423,"mtime":1611109562877,"results":"27","hashOfConfig":"20"},{"size":2916,"mtime":1611109837631,"results":"28","hashOfConfig":"20"},{"size":321,"mtime":1611089517160,"results":"29","hashOfConfig":"20"},{"size":3830,"mtime":1611089517159,"results":"30","hashOfConfig":"20"},{"size":183,"mtime":1610997377098,"results":"31","hashOfConfig":"20"},{"size":187,"mtime":1610997377099,"results":"32","hashOfConfig":"20"},{"size":4147,"mtime":1610997556639,"results":"33","hashOfConfig":"20"},{"size":20827,"mtime":1610997377096,"results":"34","hashOfConfig":"20"},{"size":1027,"mtime":1611089517162,"results":"35","hashOfConfig":"20"},{"size":5012,"mtime":1611089517164,"results":"36","hashOfConfig":"20"},{"size":792,"mtime":1611089517161,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"9vty2w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js",[],["83","84"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js",["85","86"],"import React from \"react\";\r\n// import NavBar from './components/navBar/NavBar';\r\n\r\nimport MyGlobe from './components/home/WorldMap';\r\nimport {Home} from './components/home/Home'\r\nimport AddSuggestion from './components/suggestions/AddSuggestion'\r\nimport SuggestionsList from './components/suggestions/SuggestionsList'\r\nimport About from './components/navBar/About'\r\nimport Support from './components/navBar/Support'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n import VerifySuggest from \"./components/suggestions/VerifySuggest\";\r\nimport Events from './components/events/Events'\r\nimport Login from './components/authorization/Login'\r\nimport Signup from './components/authorization/SignUp'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/about\"  component={About} />\r\n      <Route exact path=\"/support\"  component={Support} />\r\n      <Route exact path=\"/\"  component={Login} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n      <Route exact path=\"/addSuggestion\" component={AddSuggestion} />\r\n      <Route exact path=\"/suggestionsList\" component={SuggestionsList} />\r\n      <Route exact path=\"/events\" component={Events} />\r\n    \t<Route exact path='/verifySuggestion' component={VerifySuggest} />\r\n    </Router>\r\n  );\r\n\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js",["87"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js",["88","89","90"],"import React, { useState, useEffect } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport 'date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport Moment from 'react-moment';\r\nimport { inject, observer } from 'mobx-react'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nfunction AddSuggestion(props) {\r\n\r\n  const [selectedStartDate, setStartSelectedDate] = useState(new Date());\r\n  const [selectedEndDate, setEndSelectedDate] = useState(new Date());\r\n  const [selectedFiles, setSelectedFiles] = useState([])\r\n  const [inputs, setInputs] = useState({ title: '', countries: [], description: '', startDate: null, endDate: null })\r\n\r\n  const handleStartDateChange = (date) => {\r\n    console.log(date)\r\n    setStartSelectedDate(date);\r\n    console.log(selectedStartDate)\r\n  };\r\n\r\n  const handleEndDateChange = (date) => {\r\n    console.log(date)\r\n    setEndSelectedDate(date);\r\n    console.log(selectedEndDate)\r\n  };\r\n\r\n  const fileChangedHandler = ({ target }) => {\r\n    let tempList = [...selectedFiles]\r\n    setSelectedFiles(target.files)\r\n  }\r\n\r\n  const uploadHandler = () => {\r\n    console.log(selectedFiles)\r\n  }\r\n\r\n  const inputsHandler = ({ target }) => {\r\n    let tempObj = { ...inputs }\r\n    tempObj[target.name] = target.value\r\n    setInputs(tempObj)\r\n    console.log(inputs)\r\n  }\r\n\r\n  const sendNewEvent = () => {\r\n    let newEvent = {\r\n      title: `${inputs.title}, ${selectedStartDate.toDateString().slice(3)} - ${selectedEndDate.toDateString().slice(3)} `,\r\n      startDate: selectedStartDate.getFullYear(),\r\n      endDate: selectedEndDate.getFullYear(),\r\n      description: inputs.description,\r\n      countries: [inputs.countries],\r\n      gallery: selectedFiles,\r\n      //username: props.EventsStore.user.username\r\n    }\r\n    console.log(newEvent)\r\n\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"sm\">\r\n        <h4>Send us your (hi)story</h4>\r\n        <div>\r\n          <TextField name='title' id=\"standard-basic\" label=\"Title\" onChange={inputsHandler} value={inputs.title} /> <br />\r\n          <TextField name='countries' id=\"standard-basic\" label=\"Country\" onChange={inputsHandler} value={inputs.countries} />\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils} onChange={inputsHandler} >\r\n            <Grid container justify=\"space-around\">\r\n              <KeyboardDatePicker name='startDate'\r\n                disableToolbar\r\n                variant=\"inline\"\r\n                format=\"MM/dd/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date-picker-inline\"\r\n                label=\"Start date\"\r\n                minDate=\"Date(1600-01-01)\"\r\n                value={selectedStartDate}\r\n                onChange={handleStartDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n              <KeyboardDatePicker name='endDate'\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"End date\"\r\n                format=\"MM/dd/yyyy\"\r\n                minDate=\"Date(1600-01-01)\"\r\n                value={selectedEndDate}\r\n                onChange={handleEndDateChange}\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <div for=\"w3review\">Description</div>\r\n          <textarea name='description' id=\"w3review\" rows=\"15\" cols=\"80\" value={inputs.description} onChange={inputsHandler} />\r\n          <div> Upload images (optional):\r\n            <div className='uploadImage'>\r\n              <input className='uploadFile' type=\"file\" onChange={fileChangedHandler} />\r\n              <input className='imageDescription' type='text' name='imageDescription' placeholder='describe the image' />\r\n           \r\n            </div>\r\n            <div className='uploadImage'>\r\n              <input className='uploadFile' type=\"file\" onChange={fileChangedHandler} />\r\n              <input className='imageDescription' type='text' name='imageDescription' placeholder='describe the image' />\r\n            \r\n            </div>\r\n            <div className='uploadImage'>\r\n              <input className='uploadFile' type=\"file\" onChange={fileChangedHandler} />\r\n              <input className='imageDescription' type='text' name='imageDescription' placeholder='describe the image' />\r\n             \r\n            </div>\r\n            <div className='uploadImage'>\r\n              <input className='uploadFile' type=\"file\" onChange={fileChangedHandler} />\r\n              <input className='imageDescription' type='text' name='imageDescription' placeholder='describe the image' />\r\n            <Button onClick={uploadHandler} variant=\"contained\">Upload</Button>\r\n            </div>\r\n          </div>\r\n          <div><Button onClick={sendNewEvent} variant=\"contained\">Send</Button></div>\r\n        </div>\r\n\r\n\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default inject(\"EventsStore\")(observer(AddSuggestion))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js",["91"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js",["92"],"\r\nimport {Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Paper, Box, Grid, Typography } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n function SignUp(props) {\r\nconst [username, setUsername] = useState('')\r\nconst [password, setPassword] = useState('')\r\n   \r\nconst classes = useStyles();\r\n\r\n\r\nconst addNewUser = async ()=>{\r\n  let newUser = {username, password}\r\n await axios.post(\"http://localhost:4200/signup\", newUser)\r\n window.location.href  = \"http://localhost:3000/\"\r\n}\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Name\"\r\n              name=\"username\"\r\n              autoComplete=\"name\"\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n            //   type=\"submit\"\r\n              fullWidth\r\n               variant=\"contained\"\r\n              color=\"primary\"\r\n            //   className={classes.submit}\r\n              onClick={addNewUser}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default inject(\"EventsStore\")(observer(SignUp))\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js",["93","94","95"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n\r\nexport default function About() {\r\n  return (\r\n   < div>About</div>\r\n  );\r\n}","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js",["96","97","98"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Support() {\r\n  return (\r\n   < div>Support</div>\r\n  );\r\n}","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js",["99","100"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'©Elevation Academy - DreamTeam '}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userLogin = async () => {\r\n        console.log(username, password)\r\n        await props.EventsStore.userLogin({ username, password })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"User Name\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={userLogin}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    {props.EventsStore.user ? <Redirect to=\"/home\" /> : null}\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Login))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js",["101","102"],"\r\nimport React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport { Drawer, CssBaseline, AppBar, Toolbar, List, Divider, IconButton, ListItem, ListItemIcon, ListItemText, } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { inject, observer } from 'mobx-react'\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey'\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport ListIcon from '@material-ui/icons/List';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\tappBar: {\r\n\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\thide: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\tmarginLeft: -drawerWidth,\r\n\t},\r\n\tcontentShift: {\r\n\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t\tmarginLeft: 0,\r\n\t},\r\n}));\r\n\r\nconst NavBar = inject(\"EventsStore\")(\r\n\tobserver((props) => {\r\n\t\tconsole.log(props.EventsStore.user);\r\n\t\tconst classes = useStyles();\r\n\t\tconst theme = useTheme();\r\n\t\tconst [open, setOpen] = React.useState(false);\r\n\r\n\t\tconst handleDrawerOpen = () => {\r\n\t\t\tsetOpen(true);\r\n\t\t};\r\n\r\n\t\tconst handleDrawerClose = () => {\r\n\t\t\tsetOpen(false);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<AppBar\r\n\t\t\t\t\tposition='fixed'\r\n\t\t\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t\t\t[classes.appBarShift]: open,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\t\t\taria-label='open drawer'\r\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\t\tedge='start'\r\n\t\t\t\t\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\t\tvariant='persistent'\r\n\t\t\t\t\tanchor='left'\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.drawerHeader}>\r\n\t\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\r\n\t\t\t\t\t\t\t{theme.direction === \"ltr\" ? (\r\n\t\t\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<List>\r\n\t\t\t\t\t\t<Link to='/about'>\r\n\t\t\t\t\t\t\t<ListItem button key='About'>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary='About' />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to='/support'>\r\n\t\t\t\t\t\t\t<ListItem button key='Support'>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<HelpIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary='Support' />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to='/AddSuggestion'>\r\n\t\t\t\t\t\t\t<ListItem button key='AddSuggestion'>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary='AddSuggestion' />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t\t<ListItem button key='Logout'>\r\n\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<VpnKeyIcon />\r\n\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t<ListItemText primary='Logout' />\r\n\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t{props.EventsStore.user && props.EventsStore.user.type === \"admin\" ? (\r\n\t\t\t\t\t\t\t<Link to='/SuggestionsList'>\r\n\t\t\t\t\t\t\t\t<ListItem button key='SuggestionsList'>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListIcon />\r\n\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary='SuggestionsList' />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t<main\r\n\t\t\t\t\tclassName={clsx(classes.content, {\r\n\t\t\t\t\t\t[classes.contentShift]: open,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.drawerHeader} />\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t);\r\n\t})\r\n);\r\n\r\nexport default NavBar;\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js",["103","104"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { inject, observer} from 'mobx-react';\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction HomeButton(props) {\r\n  const classes = useStyles();\r\n\r\n  const eventsPage = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <Link to=\"/events\">\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={props.EventsStore.eventsRender}> \r\n                Search!\r\n            </Button>\r\n        </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(HomeButton))",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":15},{"ruleId":"109","severity":1,"message":"113","line":10,"column":42,"nodeType":"111","messageId":"112","endLine":10,"endColumn":46},{"ruleId":"109","severity":1,"message":"114","line":1,"column":22,"nodeType":"111","messageId":"112","endLine":1,"endColumn":30},{"ruleId":"109","severity":1,"message":"115","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"116","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":14},{"ruleId":"109","severity":1,"message":"117","line":38,"column":9,"nodeType":"111","messageId":"112","endLine":38,"endColumn":17},{"ruleId":"109","severity":1,"message":"118","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"115","line":6,"column":27,"nodeType":"111","messageId":"112","endLine":6,"endColumn":36},{"ruleId":"109","severity":1,"message":"119","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"120","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":40},{"ruleId":"109","severity":1,"message":"113","line":3,"column":42,"nodeType":"111","messageId":"112","endLine":3,"endColumn":46},{"ruleId":"109","severity":1,"message":"119","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"120","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":40},{"ruleId":"109","severity":1,"message":"113","line":3,"column":42,"nodeType":"111","messageId":"112","endLine":3,"endColumn":46},{"ruleId":"109","severity":1,"message":"121","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":24},{"ruleId":"109","severity":1,"message":"122","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":16},{"ruleId":"109","severity":1,"message":"119","line":14,"column":27,"nodeType":"111","messageId":"112","endLine":14,"endColumn":33},{"ruleId":"109","severity":1,"message":"120","line":14,"column":35,"nodeType":"111","messageId":"112","endLine":14,"endColumn":40},{"ruleId":"109","severity":1,"message":"123","line":5,"column":16,"nodeType":"111","messageId":"112","endLine":5,"endColumn":24},{"ruleId":"109","severity":1,"message":"124","line":19,"column":9,"nodeType":"111","messageId":"112","endLine":19,"endColumn":19},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'MyGlobe' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'computed' is defined but never used.","'useEffect' is defined but never used.","'Moment' is defined but never used.","'tempList' is assigned a value but never used.","'axios' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Redirect' is defined but never used.","'eventsPage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]