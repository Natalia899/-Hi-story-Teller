[{"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js":"1","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js":"2","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js":"3","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js":"4","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js":"5","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js":"6","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js":"7","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js":"8","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js":"9","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js":"10","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js":"11","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js":"12","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js":"13","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Event.js":"14","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js":"15","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js":"16","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js":"17","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js":"18","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js":"19","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\UploadImages.js":"20","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\Logo.js":"21","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizStart.js":"22","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizQuestion.js":"23"},{"size":704,"mtime":1610914748060,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1610914748060,"results":"26","hashOfConfig":"25"},{"size":1958,"mtime":1611412317499,"results":"27","hashOfConfig":"25"},{"size":1710,"mtime":1611412317490,"results":"28","hashOfConfig":"25"},{"size":2557,"mtime":1611422954981,"results":"29","hashOfConfig":"25"},{"size":7022,"mtime":1611428305579,"results":"30","hashOfConfig":"25"},{"size":680,"mtime":1611364022703,"results":"31","hashOfConfig":"25"},{"size":654,"mtime":1611412317495,"results":"32","hashOfConfig":"25"},{"size":187,"mtime":1610997377099,"results":"33","hashOfConfig":"25"},{"size":3830,"mtime":1611089517159,"results":"34","hashOfConfig":"25"},{"size":3467,"mtime":1611426788965,"results":"35","hashOfConfig":"25"},{"size":4147,"mtime":1610997556639,"results":"36","hashOfConfig":"25"},{"size":1156,"mtime":1611464568643,"results":"37","hashOfConfig":"25"},{"size":3518,"mtime":1611473743879,"results":"38","hashOfConfig":"25"},{"size":5281,"mtime":1611451471139,"results":"39","hashOfConfig":"25"},{"size":20827,"mtime":1611422892412,"results":"40","hashOfConfig":"25"},{"size":1208,"mtime":1611412317496,"results":"41","hashOfConfig":"25"},{"size":5925,"mtime":1611364022703,"results":"42","hashOfConfig":"25"},{"size":955,"mtime":1611364022701,"results":"43","hashOfConfig":"25"},{"size":3020,"mtime":1611449321461,"results":"44","hashOfConfig":"25"},{"size":185,"mtime":1611364022696,"results":"45","hashOfConfig":"25"},{"size":1843,"mtime":1611412317498,"results":"46","hashOfConfig":"25"},{"size":2052,"mtime":1611412317498,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"9vty2w",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js",[],["107","108"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js",["109"],"import { observable, computed, action, makeObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\nexport class EventsStore {\r\n\tconstructor() {\r\n\t\tthis.events = [];\r\n\t\tthis.user = null;\r\n\t\tthis.dateRange = [1600, 2000];\r\n\t\tthis.countries = [];\r\n\t\tthis.currentSuggestion = {};\r\n\t\tthis.quiz = [];\r\n\r\n\t\tmakeObservable(this, {\r\n\t\t\tevents: observable,\r\n\t\t\tuser: observable,\r\n\t\t\tdateRange: observable,\r\n\t\t\tcountries: observable,\r\n\t\t\tcurrentSuggestion: observable,\r\n\t\t\teventsRender: action,\r\n\t\t\tsetDateRange: action,\r\n\t\t\taddCountriesToStore: action,\r\n\t\t\tcurrentSuggestionFunction: action,\r\n\t\t\tapproveSuggestion: action,\r\n\t\t\tdeleteSuggestion: action,\r\n\t\t\tquiz:observable,\r\n\t\t\tgetQuiz: action\r\n\t\t});\r\n\t}\r\n\r\n\tsetDateRange = (val) => {\r\n\t\tthis.dateRange = val;\r\n\t};\r\n\r\n\tuserLogin = async (user) => {\r\n\t\tconst data = await axios.post(\"http://localhost:4200/login\", user);\r\n\t\tif (data.data) {\r\n\t\t\tthis.user = data.data;\r\n\t\t} else {\r\n\t\t\talert(\"username or password is not correct\");\r\n\t\t}\r\n\t};\r\n\r\n\tcurrentSuggestionFunction = (suggestion) => {\r\n\t\tconsole.log(suggestion);\r\n\t\tthis.currentSuggestion = suggestion;\r\n\t};\r\n\taddCountriesToStore = (country) => {\r\n\t\tthis.countries.push(country);\r\n\t\tconsole.log(this.countries);\r\n\t};\r\n\r\n\teventsRender = async () => {\r\n\t\tconst countries = this.countries;\r\n\t\tconst startDate = this.dateRange[0];\r\n\t\tconst endDate = this.dateRange[1];\r\n\t\tconst eventsData = { startDate, endDate, countries };\r\n\t\tlet data = await axios.post(\"http://localhost:4200/events\", eventsData);\r\n\t\tdata = data.data;\r\n\t\tfor (let i of data) {\r\n\t\t\tfor (let j of i) {\r\n\t\t\t\tthis.events.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(this.events);\r\n\t};\r\n\tapproveSuggestion = async (id) => {\r\n\t\tawait axios.put(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\tdeleteSuggestion = async (id) => {\r\n\t\tawait axios.delete(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\r\n\tgetQuiz = async () => {\r\n\tlet result = await axios.get('http://localhost:4200/quiz')\r\n\tthis.quiz = result.data\r\n\r\n\t}\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js",["110","111"],"import React from \"react\";\r\n// import NavBar from './components/navBar/NavBar';\r\n\r\nimport MyGlobe from './components/home/WorldMap';\r\nimport {Home} from './components/home/Home'\r\nimport AddSuggestion from './components/suggestions/AddSuggestion'\r\nimport SuggestionsList from './components/suggestions/SuggestionsList'\r\nimport About from './components/navBar/About'\r\nimport Support from './components/navBar/Support'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n import VerifySuggest from \"./components/suggestions/VerifySuggest\";\r\nimport Events from './components/events/Events'\r\nimport Login from './components/authorization/Login'\r\nimport Signup from './components/authorization/SignUp'\r\nimport Event from './components/events/Event';\r\nimport QuizStart from './components/quiz/QuizStart';\r\nimport QuizQuestion from './components/quiz/QuizQuestion';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/about\"  component={About} />\r\n      <Route exact path=\"/support\"  component={Support} />\r\n      <Route exact path=\"/\"  component={Login} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n      <Route exact path=\"/addSuggestion\" component={AddSuggestion} />\r\n      <Route exact path=\"/suggestionsList\" component={SuggestionsList} />\r\n      <Route exact path=\"/events\" component={Events} />\r\n      <Route exact path=\"/event/:id\" component={Event} />\r\n    \t<Route exact path='/verifySuggestion' component={VerifySuggest} />\r\n      <Route exact path=\"/quiz\" component={QuizStart} />\r\n      <Route exact path=\"/quiz/:eventId\" component={QuizQuestion} />\r\n    </Router>\r\n  );\r\n\r\n\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js",["112","113","114","115"],"import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nconst About = () => {\r\n\twindow.responsiveVoice.speak(\r\n\t\t\"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Culpa ipsum quam fugiat, vero error eum enim ab, architecto recusandae nemo velit minus earum maiores inventore debitis ex, nesciunt dignissimos quidem.\"\r\n\t);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tLorem ipsum, dolor sit amet consectetur adipisicing elit. Culpa ipsum quam fugiat,\r\n\t\t\tvero error eum enim ab, architecto recusandae nemo velit minus earum maiores\r\n\t\t\tinventore debitis ex, nesciunt dignissimos quidem.\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js",["116","117","118"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Support() {\r\n  return (\r\n   < div>Support</div>\r\n  );\r\n}","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js",["119"],"\r\nimport {Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Paper, Box, Grid, Typography } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n function SignUp(props) {\r\nconst [username, setUsername] = useState('')\r\nconst [password, setPassword] = useState('')\r\n   \r\nconst classes = useStyles();\r\n\r\n\r\nconst addNewUser = async ()=>{\r\n  let newUser = {username, password}\r\n await axios.post(\"http://localhost:4200/signup\", newUser)\r\n window.location.href  = \"http://localhost:3000/\"\r\n}\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Name\"\r\n              name=\"username\"\r\n              autoComplete=\"name\"\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n            //   type=\"submit\"\r\n              fullWidth\r\n               variant=\"contained\"\r\n              color=\"primary\"\r\n            //   className={classes.submit}\r\n              onClick={addNewUser}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default inject(\"EventsStore\")(observer(SignUp))\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js",["120","121"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'©Elevation Academy - DreamTeam '}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userLogin = async () => {\r\n        console.log(username, password)\r\n        await props.EventsStore.userLogin({ username, password })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"User Name\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={userLogin}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    {props.EventsStore.user ? <Redirect to=\"/home\" /> : null}\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Login))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js",["122","123","124"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Event.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js",["125"],"import React, { useState } from \"react\";\r\nimport { CssBaseline, Container, TextField, Grid, Button } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UploadImages from \"./UploadImages\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tinputTitle: {\r\n\t\t\"& > *\": {\r\n\t\t\tfontSize: \"24px\",\r\n\t\t\tfontWeight: \"bold\",\r\n\t\t\tfontFamily: ` \"Neuton\", serif`,\r\n\t\t},\r\n\t},\r\n\tinputCountries: {\r\n\t\t\"& > *\": {\r\n\t\t\tfontSize: \"24px\",\r\n\t\t\tfontWeight: \"lighter\",\r\n\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t},\r\n\t},\r\n\tgridCointer: {\r\n\t\t\"& > *\": {\r\n\t\t\tdisplay: \"grid\",\r\n\t\t\tjustifyContent: \"start\",\r\n\t\t},\r\n\r\n\t\tmainGridContainer: {\r\n\t\t\t\"& > *\": {\r\n\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\tgridTemplateColumns: \"repeat(2,1fr)\",\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction AddSuggestion(props) {\r\n\tconst [selectedStartDate, setStartSelectedDate] = useState(new Date());\r\n\tconst [selectedEndDate, setEndSelectedDate] = useState(new Date());\r\n\tconst [gallery, setGallery] = useState([]);\r\n\tconst [inputs, setInputs] = useState({ title: \"\", countries: [], description: \"\" });\r\n\tconst classes = useStyles();\r\n\r\n\tconst updateGallery = (updatedGallery) => {\r\n\t\tsetGallery(updatedGallery);\r\n\t};\r\n\r\n\tconst inputsHandler = ({ target }) => {\r\n\t\tlet tempObj = { ...inputs };\r\n\t\ttempObj[target.name] = target.value;\r\n\t\tsetInputs(tempObj);\r\n\t};\r\n\r\n\tconst sendNewEvent = async () => {\r\n\t\tlet newEvent = {\r\n\t\t\ttitle: `${inputs.title}, ${selectedStartDate\r\n\t\t\t\t.toDateString()\r\n\t\t\t\t.slice(3)} - ${selectedEndDate.toDateString().slice(3)} `,\r\n\t\t\tstartDate: selectedStartDate.getFullYear(),\r\n\t\t\tendDate: selectedEndDate.getFullYear(),\r\n\t\t\tdescription: inputs.description,\r\n\t\t\tcountries: [inputs.countries],\r\n\t\t\tgallery: gallery,\r\n\t\t\tusername: props.EventsStore.user.username,\r\n\t\t};\r\n\t\tawait axios.post(\"http://localhost:4200/event\", newEvent);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginTop: \"1em\",\r\n\t\t\t\t\tmarginLeft: \"1em\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Link to='/home'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\tfontSize: \"4em\",\r\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(200,200,200,0.2)\",\r\n\t\t\t\t\t\t\twidth: \"0.8em\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tfontSize: \"0.7em\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmarginLeft: \"10em\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<h4>Send us your (hi)story</h4>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div id='container' className={classes.gridCointer}>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tclassName={classes.inputTitle}\r\n\t\t\t\t\t\t\tname='title'\r\n\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\tlabel='Title'\r\n\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t\tvalue={inputs.title}\r\n\t\t\t\t\t\t/>{\" \"}\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tclassName={classes.inputCountries}\r\n\t\t\t\t\t\t\tname='countries'\r\n\t\t\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\t\t\tlabel='Countries'\r\n\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t\tvalue={inputs.countries}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MuiPickersUtilsProvider\r\n\t\t\t\t\t\t\tutils={DateFnsUtils}\r\n\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid container justify='space-around'>\r\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\tname='startDate'\r\n\t\t\t\t\t\t\t\t\tdisableToolbar\r\n\t\t\t\t\t\t\t\t\tvariant='inline'\r\n\t\t\t\t\t\t\t\t\tformat='MM/dd/yyyy'\r\n\t\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\t\tid='date-picker-inline'\r\n\t\t\t\t\t\t\t\t\tlabel='Start date'\r\n\t\t\t\t\t\t\t\t\tminDate='Date(1600-01-01)'\r\n\t\t\t\t\t\t\t\t\tvalue={selectedStartDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => setStartSelectedDate(date)}\r\n\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<KeyboardDatePicker\r\n\t\t\t\t\t\t\t\t\tname='endDate'\r\n\t\t\t\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\t\t\t\tid='date-picker-dialog'\r\n\t\t\t\t\t\t\t\t\tlabel='End date'\r\n\t\t\t\t\t\t\t\t\tformat='MM/dd/yyyy'\r\n\t\t\t\t\t\t\t\t\tminDate='Date(1600-01-01)'\r\n\t\t\t\t\t\t\t\t\tvalue={selectedEndDate}\r\n\t\t\t\t\t\t\t\t\tonChange={(date) => setEndSelectedDate(date)}\r\n\t\t\t\t\t\t\t\t\tKeyboardButtonProps={{\r\n\t\t\t\t\t\t\t\t\t\t\"aria-label\": \"change date\",\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tfontSize: \"1.5em\",\r\n\t\t\t\t\t\t\tletterSpacing: \"0.2em\",\r\n\t\t\t\t\t\t\tfontWeight: \"lighter\",\r\n\t\t\t\t\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tfor='w3review'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tDescription\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\t\t\tgridTemplateColumns: \"2fr 2fr\",\r\n\t\t\t\t\t\t\tgap: \"3em\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"lighter\",\r\n\t\t\t\t\t\t\t\t\tfontFamily: `\"Neuton\", serif`,\r\n\t\t\t\t\t\t\t\t\tfontSize: \"24px\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tname='description'\r\n\t\t\t\t\t\t\t\tid='w3review'\r\n\t\t\t\t\t\t\t\trows='15'\r\n\t\t\t\t\t\t\t\tcols='80'\r\n\t\t\t\t\t\t\t\tvalue={inputs.description}\r\n\t\t\t\t\t\t\t\tonChange={inputsHandler}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<UploadImages updateGallery={updateGallery} />\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\twidth: \"3em\",\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={sendNewEvent}\r\n\t\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\nexport default inject(\"EventsStore\")(observer(AddSuggestion));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js",["126","127"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport {\r\n\tDrawer,\r\n\tCssBaseline,\r\n\tAppBar,\r\n\tToolbar,\r\n\tList,\r\n\tDivider,\r\n\tIconButton,\r\n\tListItem,\r\n\tListItemIcon,\r\n\tListItemText,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport HelpIcon from \"@material-ui/icons/Help\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport ListIcon from \"@material-ui/icons/List\";\r\nimport \"../Styles/Navbar.css\";\r\nimport { Logo } from \"../Logo\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: \"flex\",\r\n\t},\r\n\tappBar: {\r\n\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t},\r\n\tappBarShift: {\r\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\tmarginLeft: drawerWidth,\r\n\t\ttransition: theme.transitions.create([\"margin\", \"width\"], {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t},\r\n\tmenuButton: {\r\n\t\tmarginRight: theme.spacing(2),\r\n\t},\r\n\thide: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n\tdrawer: {\r\n\t\twidth: drawerWidth,\r\n\t\tflexShrink: 0,\r\n\t},\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tdrawerHeader: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: theme.spacing(0, 1),\r\n\t\t// necessary for content to be below app bar\r\n\t\t...theme.mixins.toolbar,\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\teasing: theme.transitions.easing.sharp,\r\n\t\t\tduration: theme.transitions.duration.leavingScreen,\r\n\t\t}),\r\n\t\tmarginLeft: -drawerWidth,\r\n\t},\r\n\tcontentShift: {\r\n\t\ttransition: theme.transitions.create(\"margin\", {\r\n\t\t\teasing: theme.transitions.easing.easeOut,\r\n\t\t\tduration: theme.transitions.duration.enteringScreen,\r\n\t\t}),\r\n\t\tmarginLeft: 0,\r\n\t},\r\n}));\r\n\r\nconst NavBar = inject(\"EventsStore\")(\r\n\tobserver((props) => {\r\n\t\tconsole.log(props.EventsStore.user);\r\n\t\tconst classes = useStyles();\r\n\t\tconst theme = useTheme();\r\n\t\tconst [open, setOpen] = React.useState(false);\r\n\r\n\t\tconst handleDrawerOpen = () => {\r\n\t\t\tsetOpen(true);\r\n\t\t};\r\n\r\n\t\tconst handleDrawerClose = () => {\r\n\t\t\tsetOpen(false);\r\n\t\t};\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<CssBaseline />\r\n\r\n\t\t\t\t<AppBar\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\t\tgridTemplateColumns: \"repeat(2,1fr)\",\r\n\t\t\t\t\t\tbackgroundColor: \"rgb(52, 52, 68)\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tposition='fixed'\r\n\t\t\t\t\tclassName={clsx(classes.appBar, {\r\n\t\t\t\t\t\t[classes.appBarShift]: open,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tcolor='inherit'\r\n\t\t\t\t\t\t\taria-label='open drawer'\r\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\r\n\t\t\t\t\t\t\tedge='start'\r\n\t\t\t\t\t\t\tclassName={clsx(classes.menuButton, open && classes.hide)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t<div className='logo'>\r\n\t\t\t\t\t\t<Logo />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</AppBar>\r\n\r\n\t\t\t\t<Drawer\r\n\t\t\t\t\tclassName={classes.drawer}\r\n\t\t\t\t\tvariant='persistent'\r\n\t\t\t\t\tanchor='left'\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.drawerHeader}>\r\n\t\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\r\n\t\t\t\t\t\t\t{theme.direction === \"ltr\" ? (\r\n\t\t\t\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<List class='list'>\r\n\t\t\t\t\t\t\t<Link to='/about'>\r\n\t\t\t\t\t\t\t\t<div className='li'>\r\n\t\t\t\t\t\t\t\t\t<ListItem button key='About'>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<InfoIcon />\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tclass='nav-content'\r\n\t\t\t\t\t\t\t\t\t\t\tprimary='About'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<Link to='/support'>\r\n\t\t\t\t\t\t\t\t<div className='li'>\r\n\t\t\t\t\t\t\t\t\t<ListItem button key='Support'>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<HelpIcon />\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tclass='nav-content'\r\n\t\t\t\t\t\t\t\t\t\t\tprimary='Support'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<Link to='/AddSuggestion'>\r\n\t\t\t\t\t\t\t\t<div className='li'>\r\n\t\t\t\t\t\t\t\t\t<ListItem button key='AddSuggestion'>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tclass='nav-content'\r\n\t\t\t\t\t\t\t\t\t\t\tprimary='AddSuggestion'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t<Link to='/'>\r\n\t\t\t\t\t\t\t\t<div className='li'>\r\n\t\t\t\t\t\t\t\t\t<ListItem button key='Logout'>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<VpnKeyIcon />\r\n\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\tclass='nav-content'\r\n\t\t\t\t\t\t\t\t\t\t\tprimary='Logout'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t{props.EventsStore.user &&\r\n\t\t\t\t\t\t\tprops.EventsStore.user.type === \"admin\" ? (\r\n\t\t\t\t\t\t\t\t<Link to='/SuggestionsList'>\r\n\t\t\t\t\t\t\t\t\t<div className='li'>\r\n\t\t\t\t\t\t\t\t\t\t<ListItem button key='SuggestionsList'>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ListIcon />\r\n\t\t\t\t\t\t\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t\t\t<ListItemText\r\n\t\t\t\t\t\t\t\t\t\t\t\tclass='nav-content'\r\n\t\t\t\t\t\t\t\t\t\t\t\tprimary='SuggestionsList'\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer>\r\n\t\t\t\t<main\r\n\t\t\t\t\tclassName={clsx(classes.content, {\r\n\t\t\t\t\t\t[classes.contentShift]: open,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={classes.drawerHeader} />\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t);\r\n\t})\r\n);\r\n\r\nexport default NavBar;\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js",["128","129"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../Styles/HomeButtom.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction HomeButton(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst eventsPage = () => {};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className='hone-button-container'>\r\n\t\t\t\t<Link to='/events'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(2, 2, 8,0.8)\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName='slpioo'\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\tonClick={props.EventsStore.eventsRender}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSearch!\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(HomeButton));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\UploadImages.js",["130"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n}));\r\n\r\nfunction UploadImages(props) {\r\n\tconst [selectedFiles, setSelectedFiles] = useState(\"\");\r\n\tconst [imageDescription, setImageDescription] = useState(\"\");\r\n\tconst [image, setImage] = useState({ imageTitle: \"\", imageURL: \"\", id: \"\" });\r\n\tconst [gallery, setGallery] = useState([]);\r\n\r\n\tconst url = \"https://api.cloudinary.com/v1_1/domephsm4/image/upload\";\r\n\tconst preset = \"natalia\";\r\n\r\n\tconst fileChangedHandler = ({ target }) => {\r\n\t\tsetSelectedFiles(target.files[0]);\r\n\t};\r\n\r\n\tconst uploadHandler = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", selectedFiles);\r\n\t\tformData.append(\"upload_preset\", preset);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, formData);\r\n\t\t\tlet tempImage = { ...image };\r\n\t\t\ttempImage.imageURL = res.data.secure_url;\r\n\t\t\ttempImage.imageTitle = imageDescription;\r\n\t\t\ttempImage.id = res.data.public_id;\r\n\t\t\tsetImage(tempImage);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempGallery = [...gallery];\r\n\t\tif (image.imageURL !== \"\") {\r\n\t\t\ttempGallery.push(image);\r\n\t\t\tsetGallery(tempGallery);\r\n\t\t\tprops.updateGallery(gallery);\r\n\t\t}\r\n\t}, [image]);\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tUpload images (optional):\r\n\t\t\t<div className='uploadImage'>\r\n\t\t\t\t<input\r\n\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\tid='icon-button-file'\r\n\t\t\t\t\ttype='file'\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='icon-button-file'>\r\n\t\t\t\t\t<IconButton color='primary' aria-label='upload picture' component='span'>\r\n\t\t\t\t\t\t<PhotoCamera />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</label>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tstyle={{ display: \"inline-block\" }}\r\n\t\t\t\t\tname='title'\r\n\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ display: \"inline\" }}\r\n\t\t\t\t\tonClick={uploadHandler}\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t>\r\n\t\t\t\t\tUpload\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tdisplay: \"grid\",\r\n\t\t\t\t\tgridTemplateColumns: \"repeat(2,1fr)\",\r\n                    gap: \"2em\",\r\n                    width: \"150px\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{gallery &&\r\n\t\t\t\t\tgallery.map((image) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>{image.imageTitle}</p>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\twidth='150px'\r\n\t\t\t\t\t\t\t\t\theight='150px'\r\n\t\t\t\t\t\t\t\t\tsrc={image.imageURL}\r\n\t\t\t\t\t\t\t\t\talt=''\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default inject(\"EventsStore\")(observer(UploadImages));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\Logo.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizStart.js",["131","132","133","134"],"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useState, UseEffect, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction QuizStart (props) {\r\n  console.log(props.EventsStore.quiz);\r\n  const [eventId, setEventId] = useState('');\r\n  const [players, setPlayers] = useState(1)\r\n\r\n  const handleChange = (event) => {\r\n    let result = event.target.value\r\n    setEventId(result);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.EventsStore.getQuiz()\r\n  },[])\r\n\r\n  // const startGame = () => {\r\n\r\n  // }\r\n\r\n  return (<div>\r\n \r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Subjects</FormLabel>\r\n      <RadioGroup aria-label=\"gender\" name=\"gender1\" value={eventId} onChange={handleChange}>\r\n        {props.EventsStore.quiz && props.EventsStore.quiz.map (q => {return (\r\n        <FormControlLabel value={q.id} control={<Radio />} label={q.title} />\r\n        )\r\n        })}\r\n      </RadioGroup>\r\n    </FormControl>\r\n\r\n<FormControl component=\"fieldset\">\r\n  <RadioGroup aria-label=\"gender\" name=\"gender1\" value={players} onChange={(e)=> setPlayers(e.target.value)}>\r\n    <FormControlLabel value=\"1\" control={<Radio />} label=\"1 Player\" />\r\n    <FormControlLabel value=\"2\" control={<Radio />} label=\"2 Players\" />\r\n  </RadioGroup>\r\n</FormControl>\r\n\r\n<Link to={`/quiz/${eventId}`}><Button variant=\"contained\" color=\"primary\">\r\n  PLAY\r\n</Button> </Link>\r\n</div> )\r\n  \r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(QuizStart))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizQuestion.js",["135","136","137","138","139"],"\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nfunction QuizQuestion(props) {\r\n\r\n\tconst [counter, setCounter] = useState(0)\r\n\tconst [score, setScore] = useState(0)\r\n\tconst [isCorrect, setIsCorrect] = useState(false)\r\n\tconst [value, setValue] = useState(null)\r\n\r\n\tconst { quiz } = props.EventsStore\r\n\tconst eventId = props.match.params.eventId\r\n\tconst eventQuestions = quiz.find(q => { return q.id === eventId }).quiz\r\n\tconsole.log(eventQuestions)\r\n\r\n\tconst inputHandler = (event) => {\r\n\t\tsetIsCorrect(event.target.value)\r\n\t\tsetValue(event.target.value)\r\n\t}\r\n\r\n\tconst checkAnswer = () => {\r\n\t\tsetCounter(counter + 1)\r\n\t\tisCorrect ? setScore(score + 1) : setScore(score)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t<FormLabel component=\"legend\">{eventQuestions[counter].question}</FormLabel>\r\n\t\t\t\t\t<RadioGroup value={value} onChange={inputHandler}>\r\n\t\t\t\t\t{eventQuestions[counter].answerOptions.map((answer) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<FormControlLabel value={answer.isCorrect} control={<Radio />} label={answer.answer}\r\n\t\t\t\t\t\t />) })}\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormControl>\r\n\r\n\t\t\t\t{/* // <RadioGroup aria-label=\"gender\" name=\"gender1\" value={eventId} >\r\n\t\t\t\t// \t{eventQuestions[counter].answerOptions.map((answer) => { */}\r\n\t\t\t\t{/* // \t\treturn (<div>\r\n\t\t\t\t// \t\t\t<FormControlLabel onChange={inputHandler} value={answer.isCorrect} control={<Radio />} label={answer.answer} />\r\n\t\t\t\t// \t\t</div>)\r\n\t\t\t\t// \t})}\r\n\t\t\t\t// </RadioGroup> */}\r\n\r\n\t\t\t<button onClick={checkAnswer}>Next</button>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(QuizQuestion))",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":1,"column":22,"nodeType":"146","messageId":"147","endLine":1,"endColumn":30},{"ruleId":"144","severity":1,"message":"148","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":15},{"ruleId":"144","severity":1,"message":"149","line":10,"column":42,"nodeType":"146","messageId":"147","endLine":10,"endColumn":46},{"ruleId":"144","severity":1,"message":"150","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":33},{"ruleId":"144","severity":1,"message":"151","line":1,"column":35,"nodeType":"146","messageId":"147","endLine":1,"endColumn":40},{"ruleId":"144","severity":1,"message":"149","line":1,"column":42,"nodeType":"146","messageId":"147","endLine":1,"endColumn":46},{"ruleId":"144","severity":1,"message":"152","line":2,"column":17,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"144","severity":1,"message":"150","line":3,"column":27,"nodeType":"146","messageId":"147","endLine":3,"endColumn":33},{"ruleId":"144","severity":1,"message":"151","line":3,"column":35,"nodeType":"146","messageId":"147","endLine":3,"endColumn":40},{"ruleId":"144","severity":1,"message":"149","line":3,"column":42,"nodeType":"146","messageId":"147","endLine":3,"endColumn":46},{"ruleId":"144","severity":1,"message":"153","line":6,"column":27,"nodeType":"146","messageId":"147","endLine":6,"endColumn":36},{"ruleId":"144","severity":1,"message":"154","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":24},{"ruleId":"144","severity":1,"message":"155","line":7,"column":8,"nodeType":"146","messageId":"147","endLine":7,"endColumn":16},{"ruleId":"144","severity":1,"message":"156","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"153","line":5,"column":10,"nodeType":"146","messageId":"147","endLine":5,"endColumn":19},{"ruleId":"144","severity":1,"message":"157","line":5,"column":21,"nodeType":"146","messageId":"147","endLine":5,"endColumn":29},{"ruleId":"144","severity":1,"message":"158","line":2,"column":23,"nodeType":"146","messageId":"147","endLine":2,"endColumn":32},{"ruleId":"144","severity":1,"message":"150","line":24,"column":27,"nodeType":"146","messageId":"147","endLine":24,"endColumn":33},{"ruleId":"144","severity":1,"message":"151","line":24,"column":35,"nodeType":"146","messageId":"147","endLine":24,"endColumn":40},{"ruleId":"144","severity":1,"message":"159","line":5,"column":16,"nodeType":"146","messageId":"147","endLine":5,"endColumn":24},{"ruleId":"144","severity":1,"message":"160","line":20,"column":8,"nodeType":"146","messageId":"147","endLine":20,"endColumn":18},{"ruleId":"161","severity":1,"message":"162","line":57,"column":5,"nodeType":"163","endLine":57,"endColumn":12,"suggestions":"164"},{"ruleId":"144","severity":1,"message":"165","line":8,"column":27,"nodeType":"146","messageId":"147","endLine":8,"endColumn":36},{"ruleId":"144","severity":1,"message":"150","line":9,"column":27,"nodeType":"146","messageId":"147","endLine":9,"endColumn":33},{"ruleId":"144","severity":1,"message":"151","line":9,"column":35,"nodeType":"146","messageId":"147","endLine":9,"endColumn":40},{"ruleId":"161","severity":1,"message":"166","line":24,"column":5,"nodeType":"163","endLine":24,"endColumn":7,"suggestions":"167"},{"ruleId":"144","severity":1,"message":"153","line":3,"column":27,"nodeType":"146","messageId":"147","endLine":3,"endColumn":36},{"ruleId":"144","severity":1,"message":"150","line":4,"column":27,"nodeType":"146","messageId":"147","endLine":4,"endColumn":33},{"ruleId":"144","severity":1,"message":"151","line":4,"column":35,"nodeType":"146","messageId":"147","endLine":4,"endColumn":40},{"ruleId":"144","severity":1,"message":"149","line":4,"column":42,"nodeType":"146","messageId":"147","endLine":4,"endColumn":46},{"ruleId":"144","severity":1,"message":"168","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":14},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'MyGlobe' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Component' is defined but never used.","'useEffect' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Event' is defined but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'Redirect' is defined but never used.","'eventsPage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'gallery' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["171"],"'UseEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'props.EventsStore'. Either include it or remove the dependency array.",["172"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [gallery, image, props]",{"range":"177","text":"178"},"Update the dependencies array to be: [props.EventsStore]",{"range":"179","text":"180"},[1659,1666],"[gallery, image, props]",[846,848],"[props.EventsStore]"]