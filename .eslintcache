[{"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js":"1","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js":"2","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js":"3","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js":"4","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js":"5","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js":"6","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js":"7","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js":"8","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js":"9","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js":"10","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizStart.js":"11","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js":"12","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js":"13","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js":"14","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Event.js":"15","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\EndGame.js":"16","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizQuestion.js":"17","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js":"18","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js":"19","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js":"20","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js":"21","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js":"22","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\Logo.js":"23","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\AppBar.js":"24","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\NavBarList.js":"25","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\UseStyleNavbar.js":"26","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VeifyInputs.js":"27","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\UploadImages.js":"28","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\RendererImages.js":"29","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VerifyButtons.js":"30","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestionComponents\\UploadImages.js":"31"},{"size":704,"mtime":1610914748060,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1610914748060,"results":"34","hashOfConfig":"33"},{"size":2323,"mtime":1611496739444,"results":"35","hashOfConfig":"33"},{"size":2201,"mtime":1611517843311,"results":"36","hashOfConfig":"33"},{"size":654,"mtime":1611412317495,"results":"37","hashOfConfig":"33"},{"size":2313,"mtime":1611516313236,"results":"38","hashOfConfig":"33"},{"size":3561,"mtime":1611517806527,"results":"39","hashOfConfig":"33"},{"size":187,"mtime":1610997377099,"results":"40","hashOfConfig":"33"},{"size":595,"mtime":1611515999408,"results":"41","hashOfConfig":"33"},{"size":3830,"mtime":1611089517159,"results":"42","hashOfConfig":"33"},{"size":1843,"mtime":1611412317498,"results":"43","hashOfConfig":"33"},{"size":4147,"mtime":1610997556639,"results":"44","hashOfConfig":"33"},{"size":2703,"mtime":1611517709328,"results":"45","hashOfConfig":"33"},{"size":774,"mtime":1611496739437,"results":"46","hashOfConfig":"33"},{"size":5306,"mtime":1611496739435,"results":"47","hashOfConfig":"33"},{"size":642,"mtime":1611496739438,"results":"48","hashOfConfig":"33"},{"size":2062,"mtime":1611496739440,"results":"49","hashOfConfig":"33"},{"size":955,"mtime":1611364022701,"results":"50","hashOfConfig":"33"},{"size":2556,"mtime":1611496728174,"results":"51","hashOfConfig":"33"},{"size":1464,"mtime":1611515837574,"results":"52","hashOfConfig":"33"},{"size":1208,"mtime":1611412317496,"results":"53","hashOfConfig":"33"},{"size":20827,"mtime":1611422892412,"results":"54","hashOfConfig":"33"},{"size":185,"mtime":1611364022696,"results":"55","hashOfConfig":"33"},{"size":937,"mtime":1611515929632,"results":"56","hashOfConfig":"33"},{"size":2589,"mtime":1611515914911,"results":"57","hashOfConfig":"33"},{"size":1487,"mtime":1611515832532,"results":"58","hashOfConfig":"33"},{"size":1054,"mtime":1611516739801,"results":"59","hashOfConfig":"33"},{"size":1313,"mtime":1611517064204,"results":"60","hashOfConfig":"33"},{"size":968,"mtime":1611522223841,"results":"61","hashOfConfig":"33"},{"size":562,"mtime":1611517903513,"results":"62","hashOfConfig":"33"},{"size":2787,"mtime":1611517917017,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"9vty2w",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"66"},"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\index.js",[],["138","139"],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\reportWebVitals.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\stores\\EventStore.js",["140"],"import { observable, computed, action, makeObservable } from \"mobx\";\r\nimport axios from \"axios\";\r\nexport class EventsStore {\r\n\tconstructor() {\r\n\t\tthis.events = [];\r\n\t\tthis.user = null;\r\n\t\tthis.dateRange = [1600, 2000];\r\n\t\tthis.countries = [];\r\n\t\tthis.currentSuggestion = {};\r\n        this.quiz = [];\r\n        this.score = {}\r\n\r\n\t\tmakeObservable(this, {\r\n\t\t\tevents: observable,\r\n\t\t\tuser: observable,\r\n\t\t\tdateRange: observable,\r\n\t\t\tcountries: observable,\r\n            currentSuggestion: observable,\r\n            score: observable,\r\n\t\t\teventsRender: action,\r\n\t\t\tsetDateRange: action,\r\n\t\t\taddCountriesToStore: action,\r\n\t\t\tcurrentSuggestionFunction: action,\r\n\t\t\tapproveSuggestion: action,\r\n\t\t\tdeleteSuggestion: action,\r\n\t\t\tquiz:observable,\r\n            getQuiz: action,\r\n            quizScore: action,\r\n\t\t});\r\n\t}\r\n\r\n\tsetDateRange = (val) => {\r\n\t\tthis.dateRange = val;\r\n\t};\r\n\r\n\tuserLogin = async (user) => {\r\n\t\tconst data = await axios.post(\"http://localhost:4200/login\", user);\r\n\t\tif (data.data) {\r\n\t\t\tthis.user = data.data;\r\n\t\t} else {\r\n\t\t\talert(\"username or password is not correct\");\r\n\t\t}\r\n\t};\r\n\r\n\tcurrentSuggestionFunction = (suggestion) => {\r\n\t\tconsole.log(suggestion);\r\n\t\tthis.currentSuggestion = suggestion;\r\n\t};\r\n\taddCountriesToStore = (country) => {\r\n\t\tthis.countries.push(country);\r\n\t\tconsole.log(this.countries);\r\n\t};\r\n\r\n\teventsRender = async () => {\r\n\t\tconst countries = this.countries;\r\n\t\tconst startDate = this.dateRange[0];\r\n\t\tconst endDate = this.dateRange[1];\r\n\t\tconst eventsData = { startDate, endDate, countries };\r\n\t\tlet data = await axios.post(\"http://localhost:4200/events\", eventsData);\r\n\t\tdata = data.data;\r\n\t\tfor (let i of data) {\r\n\t\t\tfor (let j of i) {\r\n\t\t\t\tthis.events.push(j);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(this.events);\r\n    };\r\n    \r\n    addingComment = async (newComment, id) => {\r\n        await axios.put(`http://localhost:4200/comment/${id}`, newComment)\r\n    }\r\n\r\n\tapproveSuggestion = async (id) => {\r\n\t\tawait axios.put(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\tdeleteSuggestion = async (id) => {\r\n\t\tawait axios.delete(`http://localhost:4200/event/${id}`);\r\n\t};\r\n\r\n\tgetQuiz = async () => {\r\n\tlet result = await axios.get('http://localhost:4200/quiz')\r\n\tthis.quiz = result.data\r\n    };\r\n    \r\n    quizScore = (score) => {\r\n        this.score = score\r\n        console.log(this.score)\r\n    }\r\n\r\n}\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\App.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\Home.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\SuggestionsList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestion.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\Support.js",["141","142","143"],"import React from 'react';\r\n\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Support() {\r\n  return (\r\n   < div>Support</div>\r\n  );\r\n}","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\About.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\SignUp.js",["144"],"\r\nimport {Avatar, Button, CssBaseline, TextField, FormControlLabel, Checkbox, Link, Paper, Box, Grid, Typography } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { inject, observer } from 'mobx-react'\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n function SignUp(props) {\r\nconst [username, setUsername] = useState('')\r\nconst [password, setPassword] = useState('')\r\n   \r\nconst classes = useStyles();\r\n\r\n\r\nconst addNewUser = async ()=>{\r\n  let newUser = {username, password}\r\n await axios.post(\"http://localhost:4200/signup\", newUser)\r\n window.location.href  = \"http://localhost:3000/\"\r\n}\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign Up\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"username\"\r\n              label=\"Name\"\r\n              name=\"username\"\r\n              autoComplete=\"name\"\r\n              value={username}\r\n              onChange={({ target }) => setUsername(target.value)}\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={({ target }) => setPassword(target.value)}\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n            //   type=\"submit\"\r\n              fullWidth\r\n               variant=\"contained\"\r\n              color=\"primary\"\r\n            //   className={classes.submit}\r\n              onClick={addNewUser}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default inject(\"EventsStore\")(observer(SignUp))\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizStart.js",["145","146","147","148"],"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useState, UseEffect, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction QuizStart (props) {\r\n  console.log(props.EventsStore.quiz);\r\n  const [eventId, setEventId] = useState('');\r\n  const [players, setPlayers] = useState(1)\r\n\r\n  const handleChange = (event) => {\r\n    let result = event.target.value\r\n    setEventId(result);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    props.EventsStore.getQuiz()\r\n  },[])\r\n\r\n  // const startGame = () => {\r\n\r\n  // }\r\n\r\n  return (<div>\r\n \r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Subjects</FormLabel>\r\n      <RadioGroup aria-label=\"gender\" name=\"gender1\" value={eventId} onChange={handleChange}>\r\n        {props.EventsStore.quiz && props.EventsStore.quiz.map (q => {return (\r\n        <FormControlLabel value={q.id} control={<Radio />} label={q.title} />\r\n        )\r\n        })}\r\n      </RadioGroup>\r\n    </FormControl>\r\n\r\n<FormControl component=\"fieldset\">\r\n  <RadioGroup aria-label=\"gender\" name=\"gender1\" value={players} onChange={(e)=> setPlayers(e.target.value)}>\r\n    <FormControlLabel value=\"1\" control={<Radio />} label=\"1 Player\" />\r\n    <FormControlLabel value=\"2\" control={<Radio />} label=\"2 Players\" />\r\n  </RadioGroup>\r\n</FormControl>\r\n\r\n<Link to={`/quiz/${eventId}`}><Button variant=\"contained\" color=\"primary\">\r\n  PLAY\r\n</Button> </Link>\r\n</div> )\r\n  \r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(QuizStart))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\authorization\\Login.js",["149","150"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'©Elevation Academy - DreamTeam '}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\nfunction Login(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    const userLogin = async () => {\r\n        console.log(username, password)\r\n        await props.EventsStore.userLogin({ username, password })\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n        </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"User Name\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                        autoFocus\r\n                        onChange={(event) => setUsername(event.target.value)}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        onChange={(event) => setPassword(event.target.value)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={userLogin}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    {props.EventsStore.user ? <Redirect to=\"/home\" /> : null}\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link href=\"/signup\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Login))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggest.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Events.js",["151","152","153"],"import { Link } from 'react-router-dom';\r\nimport { inject, observer} from 'mobx-react';\r\nimport Event from './Event'\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nfunction Events(props){\r\n    let {events} = props.EventsStore\r\n\r\n    console.log(events)\r\n    \r\n    return(\r\n        <div>\r\n         { events.map(event => {return(\r\n\r\n            <div> \r\n\r\n                <h1>\r\n                    {event.title}\r\n                </h1>\r\n                \r\n                <Link to={`/event/${event._id}`}>\r\n                    {console.log(`${event._id}`)}\r\n                    <img src={event.gallery[0].imageURL} alt='' />\r\n                </Link>\r\n            </div>\r\n            )})}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Events))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\events\\Event.js",["154","155","156"],"import { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport \"./Event.css\"\r\n\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport { TextField } from '@material-ui/core';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nfunction Event(props) {\r\n    let { events } = props.EventsStore\r\n    const eventId = props.match.params.id\r\n    const user = props.EventsStore.user.username\r\n\r\n    let event = events.find(event => event._id === eventId)\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            '& > *': {\r\n\r\n                margin: theme.spacing(1)\r\n            },\r\n            width: '100%',\r\n            heading: {\r\n                fontSize: theme.typography.pxToRem(15),\r\n                fontWeight: theme.typography.fontWeightRegular,\r\n            }\r\n        }\r\n    }));\r\n\r\n\r\n    const [input, setInput] = useState(\"\")\r\n    const [comments, setComments] = useState([])\r\n\r\n    const inputHandler = (event) => {\r\n        setInput(event.target.value)\r\n    }\r\n\r\n    const shareComment = (input) => {\r\n        let newComment = {comment: input, time: new Date(), username: user}\r\n        setComments([...comments, newComment])\r\n        props.EventsStore.addingComment(newComment, event._id)\r\n        setInput(\"\")\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className=\"idan\">\r\n            <div className={classes.root}>\r\n                <Link to=\"/events\" >\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                        Back\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n\r\n            <h1>{event.title}</h1>\r\n            <h2> {event.startDate} - {event.endDate}</h2>\r\n\r\n            <div className=\"gallery\">\r\n                <div id=\"carousel\">\r\n                    {event.gallery.map(image => {\r\n                        return (\r\n                            <figure>\r\n                                <div>\r\n                                    <img src={image.imageURL} alt=\"\" width=\"300px\" height=\"300px\" />\r\n                                    <figcaption>{image.imageTitle}</figcaption>\r\n                                </div>\r\n                            </figure>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n\r\n            <p className=\"description\">\r\n                {event.description}\r\n            </p>\r\n\r\n            <div className={classes.root}>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1a-content\"\r\n                        id=\"panel1a-header\"\r\n                    >\r\n                    <div style={{ \r\n                        display:\"grid\",\r\n                        justifyContent:\"center\",\r\n                    }} >\r\n\r\n                    <div>\r\n                        <Typography className= {classes.heading}>\r\n                            Share your thoughts!\r\n                        </Typography>\r\n                    </div>\r\n\r\n                    </div>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography>\r\n                            <label>user name: {user}</label>\r\n\r\n                            <TextField\r\n                            id=\"outlined-full-width\"\r\n                            label=\"type\"\r\n                            style={{ margin: 8 }}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            onChange={inputHandler}\r\n                            value={input}\r\n                          />\r\n\r\n                            <Button  onClick={() => shareComment(input)} size='small' variant=\"contained\" color=\"secondary\">\r\n                                Send!\r\n                            </Button>\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                    {comments ? comments.map(c => {return (\r\n                        <div>\r\n                            <div>\r\n                                user: {c.username}\r\n                            </div>\r\n                            <div>\r\n                                time: {c.time.toDateString().slice(3)}\r\n                            </div>\r\n                            <div>\r\n                                comment: {c.comment}\r\n                            </div><br></br>\r\n                        </div>\r\n                    )}): null}\r\n\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(Event))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\EndGame.js",["157","158","159"],"import { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction EndGame(props) {\r\n    console.log(props.EventsStore.score)\r\n    const {score} = props.EventsStore\r\n\r\n    const calcScore = () => {\r\n        let sum = 0\r\n        for(let key in score){\r\n            sum += score[key]\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {sum}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            Your score is:\r\n            {calcScore()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(EndGame))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\quiz\\QuizQuestion.js",["160","161","162","163","164"],"\r\nimport { inject, observer } from 'mobx-react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\n\r\nfunction QuizQuestion(props) {\r\n\r\n\tconst [counter, setCounter] = useState(1)\r\n\tconst [score, setScore] = useState({})\r\n\r\n\tconst { quiz } = props.EventsStore\r\n\tconst eventId = props.match.params.eventId\r\n\tconst eventQuestions = quiz.find(q => { return q.id === eventId }).quiz\r\n\tconsole.log(eventQuestions)\r\n\r\n\tconst inputHandler = (event) => {\r\n\t\tconst choice = event.target.value\r\n\t\tconsole.log(event.target.value)\r\n\r\n\t\tconst result = eventQuestions[counter-1].answerOptions.\r\n\t\tfind(ans => ans.answer === choice).isCorrect\r\n\t\tif(result === true){\r\n\t\t\tlet newScore = {...score}\r\n\t\t\tnewScore[counter] = 1\r\n\t\t\tsetScore(newScore)\r\n\t\t}else{\r\n\t\t\tlet newScore = {...score}\r\n\t\t\tnewScore[counter] = 0\r\n\t\t\tsetScore(newScore)\r\n\t\t}\r\n\t}\r\n\r\n\tconst quizScore = () => {\r\n\t\tprops.EventsStore.quizScore(score)\r\n\t}\r\n\r\n\tconsole.log(score)\r\n\r\n\tconst checkAnswer = () => {\r\n\t\tsetCounter(counter + 1)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t\t<FormControl component=\"fieldset\">\r\n\t\t\t\t\t<FormLabel component=\"legend\">{eventQuestions[counter-1].question}</FormLabel>\r\n\t\t\t\t\t<RadioGroup onChange={inputHandler}>\r\n\t\t\t\t\t{eventQuestions[counter-1].answerOptions.map(({answer}) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<FormControlLabel value={answer} control={<Radio />} label={answer}\r\n\t\t\t\t\t\t />) })}\r\n\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t</FormControl>\r\n\t\t\t<div>\r\n\t\t\t\t{counter === 10 ?\r\n\t\t\t\t\t<Link to=\"/endGame\">\r\n\t\t\t\t\t<button onClick={quizScore}>End Game</button>\r\n\t\t\t\t\t</Link>: <button onClick={checkAnswer}>Next</button>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(QuizQuestion))","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\HomeButton.js",["165","166"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport \"../Styles/HomeButtom.css\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction HomeButton(props) {\r\n\tconst classes = useStyles();\r\n\r\n\tconst eventsPage = () => {};\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<div className='hone-button-container'>\r\n\t\t\t\t<Link to='/events'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackgroundColor: \"rgba(2, 2, 8,0.8)\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName='slpioo'\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='secondary'\r\n\t\t\t\t\t\tonClick={props.EventsStore.eventsRender}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSearch!\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default inject(\"EventsStore\")(observer(HomeButton));\r\n","D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\WorldMap.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavBar.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\TimeLine.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\home\\GlobeData.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\Logo.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\AppBar.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\NavBarList.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\navBar\\NavbarComponents\\UseStyleNavbar.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VeifyInputs.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\UploadImages.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\RendererImages.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\VerifySuggestionComponents\\VerifyButtons.js",[],"D:\\code\\Hakaton\\-Hi-story-Teller\\src\\components\\suggestions\\AddSuggestionComponents\\UploadImages.js",["167"],"import React, { useState, useEffect } from \"react\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport \"date-fns\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t\"& > *\": {\r\n\t\t\tmargin: theme.spacing(1),\r\n\t\t},\r\n\t},\r\n\tinput: {\r\n\t\tdisplay: \"none\",\r\n\t},\r\n}));\r\n\r\nfunction UploadImages(props) {\r\n\tconst [selectedFiles, setSelectedFiles] = useState(\"\");\r\n\tconst [imageDescription, setImageDescription] = useState(\"\");\r\n\tconst [image, setImage] = useState({ imageTitle: \"\", imageURL: \"\", id: \"\" });\r\n\tconst [gallery, setGallery] = useState([]);\r\n\r\n\tconst url = \"https://api.cloudinary.com/v1_1/domephsm4/image/upload\";\r\n\tconst preset = \"natalia\";\r\n\r\n\tconst fileChangedHandler = ({ target }) => {\r\n\t\tsetSelectedFiles(target.files[0]);\r\n\t};\r\n\r\n\tconst uploadHandler = async () => {\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append(\"file\", selectedFiles);\r\n\t\tformData.append(\"upload_preset\", preset);\r\n\t\ttry {\r\n\t\t\tconst res = await axios.post(url, formData);\r\n\t\t\tlet tempImage = { ...image };\r\n\t\t\ttempImage.imageURL = res.data.secure_url;\r\n\t\t\ttempImage.imageTitle = imageDescription;\r\n\t\t\ttempImage.id = res.data.public_id;\r\n\t\t\tsetImage(tempImage);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet tempGallery = [...gallery];\r\n\t\tif (image.imageURL !== \"\") {\r\n\t\t\ttempGallery.push(image);\r\n\t\t\tsetGallery(tempGallery);\r\n\t\t\tprops.updateGallery(gallery);\r\n\t\t}\r\n\t}, [image]);\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{\" \"}\r\n\t\t\tUpload images (optional):\r\n\t\t\t<div className='uploadImage'>\r\n\t\t\t\t<input\r\n\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\tonChange={fileChangedHandler}\r\n\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\tid='icon-button-file'\r\n\t\t\t\t\ttype='file'\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor='icon-button-file'>\r\n\t\t\t\t\t<IconButton color='primary' aria-label='upload picture' component='span'>\r\n\t\t\t\t\t\t<PhotoCamera />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</label>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tstyle={{ display: \"inline-block\" }}\r\n\t\t\t\t\tname='title'\r\n\t\t\t\t\tonChange={({ target }) => setImageDescription(target.value)}\r\n\t\t\t\t\tid='standard-basic'\r\n\t\t\t\t\tlabel='Describe the image'\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tstyle={{ display: \"inline\" }}\r\n\t\t\t\t\tonClick={uploadHandler}\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t>\r\n\t\t\t\t\tUpload\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t{gallery &&\r\n\t\t\t\tgallery.map((image) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img width='300px' height='300px' src={image.imageURL} alt='' />\r\n\t\t\t\t\t\t\t<p>{image.imageTitle}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default inject(\"EventsStore\")(observer(UploadImages));\r\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":22,"nodeType":"174","messageId":"175","endLine":1,"endColumn":30},{"ruleId":"172","severity":1,"message":"176","line":3,"column":27,"nodeType":"174","messageId":"175","endLine":3,"endColumn":33},{"ruleId":"172","severity":1,"message":"177","line":3,"column":35,"nodeType":"174","messageId":"175","endLine":3,"endColumn":40},{"ruleId":"172","severity":1,"message":"178","line":3,"column":42,"nodeType":"174","messageId":"175","endLine":3,"endColumn":46},{"ruleId":"172","severity":1,"message":"179","line":6,"column":27,"nodeType":"174","messageId":"175","endLine":6,"endColumn":36},{"ruleId":"172","severity":1,"message":"180","line":8,"column":27,"nodeType":"174","messageId":"175","endLine":8,"endColumn":36},{"ruleId":"172","severity":1,"message":"176","line":9,"column":27,"nodeType":"174","messageId":"175","endLine":9,"endColumn":33},{"ruleId":"172","severity":1,"message":"177","line":9,"column":35,"nodeType":"174","messageId":"175","endLine":9,"endColumn":40},{"ruleId":"181","severity":1,"message":"182","line":24,"column":5,"nodeType":"183","endLine":24,"endColumn":7,"suggestions":"184"},{"ruleId":"172","severity":1,"message":"185","line":6,"column":8,"nodeType":"174","messageId":"175","endLine":6,"endColumn":24},{"ruleId":"172","severity":1,"message":"186","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":16},{"ruleId":"172","severity":1,"message":"187","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":13},{"ruleId":"172","severity":1,"message":"179","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":19},{"ruleId":"172","severity":1,"message":"188","line":4,"column":21,"nodeType":"174","messageId":"175","endLine":4,"endColumn":29},{"ruleId":"172","severity":1,"message":"179","line":3,"column":17,"nodeType":"174","messageId":"175","endLine":3,"endColumn":26},{"ruleId":"172","severity":1,"message":"189","line":14,"column":8,"nodeType":"174","messageId":"175","endLine":14,"endColumn":24},{"ruleId":"172","severity":1,"message":"190","line":16,"column":8,"nodeType":"174","messageId":"175","endLine":16,"endColumn":13},{"ruleId":"172","severity":1,"message":"178","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":14},{"ruleId":"172","severity":1,"message":"179","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":19},{"ruleId":"172","severity":1,"message":"188","line":3,"column":21,"nodeType":"174","messageId":"175","endLine":3,"endColumn":29},{"ruleId":"172","severity":1,"message":"179","line":3,"column":27,"nodeType":"174","messageId":"175","endLine":3,"endColumn":36},{"ruleId":"172","severity":1,"message":"176","line":4,"column":27,"nodeType":"174","messageId":"175","endLine":4,"endColumn":33},{"ruleId":"172","severity":1,"message":"177","line":4,"column":35,"nodeType":"174","messageId":"175","endLine":4,"endColumn":40},{"ruleId":"172","severity":1,"message":"191","line":9,"column":8,"nodeType":"174","messageId":"175","endLine":9,"endColumn":14},{"ruleId":"192","severity":1,"message":"193","line":26,"column":57,"nodeType":"194","messageId":"195","endLine":26,"endColumn":58,"fix":"196"},{"ruleId":"172","severity":1,"message":"197","line":5,"column":16,"nodeType":"174","messageId":"175","endLine":5,"endColumn":24},{"ruleId":"172","severity":1,"message":"198","line":20,"column":8,"nodeType":"174","messageId":"175","endLine":20,"endColumn":18},{"ruleId":"181","severity":1,"message":"199","line":57,"column":5,"nodeType":"183","endLine":57,"endColumn":12,"suggestions":"200"},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'computed' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'UseEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.EventsStore'. Either include it or remove the dependency array.","ArrayExpression",["203"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Event' is defined but never used.","'useState' is defined but never used.","'TextareaAutosize' is defined but never used.","'axios' is defined but never used.","'Button' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"204","text":"205"},"'Redirect' is defined but never used.","'eventsPage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'gallery' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["206"],"no-global-assign","no-unsafe-negation",{"desc":"207","fix":"208"},[983,988],"\r\n\t\t.",{"desc":"209","fix":"210"},"Update the dependencies array to be: [props.EventsStore]",{"range":"211","text":"212"},"Update the dependencies array to be: [gallery, image, props]",{"range":"213","text":"214"},[846,848],"[props.EventsStore]",[1659,1666],"[gallery, image, props]"]